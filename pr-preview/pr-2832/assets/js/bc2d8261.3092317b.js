"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[77632],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>u});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),p=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=p(t.components);return r.createElement(o.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,o=t.parentName,m=s(t,["components","mdxType","originalType","parentName"]),d=p(a),u=n,k=d["".concat(o,".").concat(u)]||d[u]||c[u]||l;return a?r.createElement(k,i(i({ref:e},m),{},{components:a})):r.createElement(k,i({ref:e},m))}));function u(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=d;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s.mdxType="string"==typeof t?t:n,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},62939:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>k,frontMatter:()=>o,metadata:()=>m,toc:()=>d});a(67294);var r=a(3905),n=a(67709),l=a(7626);function i(){return i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t},i.apply(this,arguments)}function s(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}const o={id:"network-acmepacket-snmp",title:"Acme Packet SNMP"},p=void 0,m={unversionedId:"integrations/plugin-packs/procedures/network-acmepacket-snmp",id:"integrations/plugin-packs/procedures/network-acmepacket-snmp",title:"Acme Packet SNMP",description:"Plugin Pack Assets",source:"@site/pp/integrations/plugin-packs/procedures/network-acmepacket-snmp.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/network-acmepacket-snmp",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/network-acmepacket-snmp",draft:!1,tags:[],version:"current",frontMatter:{id:"network-acmepacket-snmp",title:"Acme Packet SNMP"},sidebar:"pp",previous:{title:"A10 AX",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/network-loadbalancers-a10-ax-snmp"},next:{title:"Adva FSP 150 SNMP",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/network-adva-fsp150-snmp"}},c={},d=[{value:"Plugin Pack Assets",id:"plugin-pack-assets",level:2},{value:"Monitored Objects",id:"monitored-objects",level:3},{value:"Discovery rules",id:"discovery-rules",level:3},{value:"Collected metrics &amp; status",id:"collected-metrics--status",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Host configuration",id:"host-configuration",level:2},{value:"How to test the Plugin and what are the main options for?",id:"how-to-test-the-plugin-and-what-are-the-main-options-for",level:2},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"UNKNOWN: SNMP GET Request : Timeout",id:"unknown-snmp-get-request--timeout",level:4},{value:"UNKNOWN: SNMP GET Request : Cant get a single value.",id:"unknown-snmp-get-request--cant-get-a-single-value",level:4}],u={toc:d};function k(t){var{components:e}=t,a=s(t,["components"]);return(0,r.kt)("wrapper",i({},u,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",i({},{id:"plugin-pack-assets"}),"Plugin Pack Assets"),(0,r.kt)("h3",i({},{id:"monitored-objects"}),"Monitored Objects"),(0,r.kt)("p",null,"The Plugin Pack Acme Packet SNMP collects metrics for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Codec"),(0,r.kt)("li",{parentName:"ul"},"Hardware"),(0,r.kt)("li",{parentName:"ul"},"Interfaces"),(0,r.kt)("li",{parentName:"ul"},"Policy servers"),(0,r.kt)("li",{parentName:"ul"},"Realm"),(0,r.kt)("li",{parentName:"ul"},"Security"),(0,r.kt)("li",{parentName:"ul"},"Sip"),(0,r.kt)("li",{parentName:"ul"},"System")),(0,r.kt)("h3",i({},{id:"discovery-rules"}),"Discovery rules"),(0,r.kt)(n.Z,{groupId:"sync",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Services",label:"Services",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Rule name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Net-Acmepacket-SNMP-Interface-Name"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Discover network interfaces and monitor bandwidth utilization")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Net-Acmepacket-SNMP-Policy-Server-Name"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Discover external policy servers and monitor statistics")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Net-Acmepacket-SNMP-Realm-Name"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Discover realms and monitor utilization")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Net-Acmepacket-SNMP-Sip-Name"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Discover Sip interfaces and monitor utilization")))))),(0,r.kt)("h3",i({},{id:"collected-metrics--status"}),"Collected metrics & status"),(0,r.kt)(n.Z,{groupId:"sync",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Codec",label:"Codec",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"transcoding.sessions.active.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of active transcoded sessions"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"transcoding.resources.usage.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of transcoding resources currently in-use"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"transcoding.resources.free.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of transcoding resources currently free"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"transcoding.resources.usage.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"The percentage of transcoding resources currently in-use"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"%"))))),(0,r.kt)(l.Z,{value:"Hardware",label:"Hardware",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"fan status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Status of the fan"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"fan","_","description"),"#hardware.fan.speed.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Speed of the fan"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"psu status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Status of the power supply"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"temperature status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Status of the temperature sensor"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sensor","_","description"),"#hardware.temperature.celsius"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Temperature of the sensor"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"voltage status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Status of the voltage sensor"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sensor","_","description"),"#hardware.voltage.volt"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Voltage of the sensor"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"V"))))),(0,r.kt)(l.Z,{value:"Interfaces",label:"Interfaces",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Status of the interface"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"interface","_","name"),"#","interface.traffic.in.bitspersecond"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Incoming traffic going through the interface"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"b/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"interface","_","name"),"#","interface.traffic.in.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Percentage of the interface's ",(0,r.kt)("em",{parentName:"td"},"in")," bandwidth usage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"interface","_","name"),"#","interface.traffic.out.bitspersecond"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Outgoing traffic going through the interface"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"b/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"interface","_","name"),"#","interface.traffic.out.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Percentage of the interface's ",(0,r.kt)("em",{parentName:"td"},"out")," bandwidth usage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"%")))),(0,r.kt)("p",null,"A regexp filter is available to target a specific interface identifier - ifName ","[",(0,r.kt)("inlineCode",{parentName:"p"},"--interface='^eth0$' --name"),"]")),(0,r.kt)(l.Z,{value:"Policy-servers",label:"Policy-servers",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"policy_servers.total.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of policy servers"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.client_transactions.total.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of client transactions for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.client_transactions.errors.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of client transactions Errors received for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.server_transactions.total.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of server transactions for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.server_transactions.requests.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of requests received on server transaction for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.server_transactions.requests.dropped.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of requests dropped  by server transactions for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.server_transactions.responses.succeeded.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of success responses sent by server transactions for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.server_transactions.responses.errors.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of error responses sent by server transactions for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.authorization_authentication_request.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of AAR messages sent by this Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.authorization_authentication_answer.succeeded.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of AAA success messages for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.authorization_authentication_answer.errors.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of AAA error messages for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.session_termination_request.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of STR messages sent by this Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.session_termination_answer.succeeded.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of STA success messages for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.session_termination_answer.errors.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of STA error messages for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.abort_session_request.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of ASR messages sent by this Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.abort_session_answer.succeeded.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of ASA success messages for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.abort_session_answer.errors.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of ASA error messages for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.re_auth_request.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of RAR messages received by this Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.re_auth_answer.succeeded.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of RAA success messages for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"policy","_","name"),"#","policy_server.messages.re_auth_answer.errors.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of RAA error messages for Rx policy server"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"})))))),(0,r.kt)(l.Z,{value:"Realm-usage",label:"Realm-usage",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"realm","_","name"),"#","realm.sessions.in.current.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Current number of inbound sessions"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"realm","_","name"),"#","realm.sessions.in.rate.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Current number of inbound sessions rate"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"realm","_","name"),"#","realm.sessions.in.total.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of inbound sessions"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"realm","_","name"),"#","realm.sessions.out.current.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Current number of outbound sessions"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"realm","_","name"),"#","realm.sessions.out.rate.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Current number of outbound sessions rate"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"realm","_","name"),"#","realm.sessions.out.total.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of outbound sessions"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"realm","_","name"),"#","realm.rfactor.qos.average.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Average number of QoS RFactor"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"realm","_","name"),"#","realm.rfactor.execeded.total.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of RFactor exceeded"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"})))))),(0,r.kt)(l.Z,{value:"Security",label:"Security",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ipsec.tunnels.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"The number of IPsec tunnels currently in progress"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ipsec.license.usage.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"The percentage of licensed IPsec tunnels currently in progress"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.registrations.total.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of registration messages received"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.registrations.protected.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of protected registration messages received"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.security_association_add.requests.in.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of IMS-AKA ADD-SA requests received"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.security_association_add.responses.out.succeded.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of IMS-AKA ADD-SA success responses sent"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.security_association_add.responses.out.failed.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of IMS-AKA ADD-SA fail responses sent"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.security_association_add.added.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of IMS-AKA ADD-SA added"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.security_association_del.requests.in.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of IMS-AKA DEL-SA requests received"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.security_association_del.responses.out.succeded.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of IMS-AKA DEL-SA success responses sent"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.security_association_del.responses.out.failed.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of IMS-AKA DEL-SA fail responses sent"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"security.ims_aka.security_association_del.deleted.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of IMS-AKA DEL-SA fail responses sent"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"})))))),(0,r.kt)(l.Z,{value:"Sip-usage",label:"Sip-usage",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Status of the SIP"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sip","_","name"),"#","sip.sessions.in.rate"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"current number of inbound sessions"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sip","_","name"),"#","sip.sessions.out.rate"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"current number of outbound sessions"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sip","_","name"),"#","sip.stats.latency.milliseconds"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Average Latency"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sip","_","name"),"#","sip.stats.asr.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Answer-to-seizure ratio"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"})))))),(0,r.kt)(l.Z,{value:"System-usage",label:"System-usage",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"health.score.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Current health score"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"cpu.utilization.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"CPU utilization"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"memory.usage.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Memory usage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"licence.usage.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of license used"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"sessions.current.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Current number of sessions"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"calls.current.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Current number of calls"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"replication status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Status of the replication"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}))))))),(0,r.kt)("h2",i({},{id:"prerequisites"}),"Prerequisites"),(0,r.kt)("p",null,"To control your Acme Packet, the SNMP must be configured."),(0,r.kt)("h2",i({},{id:"setup"}),"Setup"),(0,r.kt)(n.Z,{groupId:"sync",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install the Centreon Plugin on every Poller:")),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Network-Acmepacket-Snmp\n")),(0,r.kt)("ol",i({},{start:2}),(0,r.kt)("li",{parentName:"ol"},'On the Centreon Web interface in "Configuration > Plugin packs > Manager", install the ',(0,r.kt)("em",{parentName:"li"},"Acme Packet")," Plugin Pack"))),(0,r.kt)(l.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install the Centreon Plugin on every Poller:")),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Network-Acmepacket-Snmp\n")),(0,r.kt)("ol",i({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"On the Centreon Central server, install the Centreon Plugin Pack from the RPM:")),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-pack-network-acmepacket-snmp\n")),(0,r.kt)("ol",i({},{start:3}),(0,r.kt)("li",{parentName:"ol"},'On the Centreon Web interface in "Configuration > Plugin packs > Manager", install the ',(0,r.kt)("em",{parentName:"li"},"Acme Packet")," Plugin Pack")))),(0,r.kt)("h2",i({},{id:"host-configuration"}),"Host configuration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add a new Host and fill the ",(0,r.kt)("em",{parentName:"li"},"IP Address/FQDN"),", ",(0,r.kt)("em",{parentName:"li"},"SNMP Version")," and ",(0,r.kt)("em",{parentName:"li"},"SNMP Community")," fields according to the device's configuration"),(0,r.kt)("li",{parentName:"ul"},"Apply the ",(0,r.kt)("em",{parentName:"li"},"Net-Acmepacket-SNMP-Custom")," Host Template")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"When using SNMP v3, use the SNMPEXTRAOPTIONS Macro to add specific authentication parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Mandatory"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"})),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"SNMPEXTRAOPTIONS"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Configure your own SNMPv3 credentials combo")))),(0,r.kt)("h2",i({},{id:"how-to-test-the-plugin-and-what-are-the-main-options-for"}),"How to test the Plugin and what are the main options for?"),(0,r.kt)("p",null,"Once the plugin installed, log into your Centreon Poller CLI using the ",(0,r.kt)("em",{parentName:"p"},"centreon-engine")," user account\nand test the Plugin by running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins/centreon_acmepacket_snmp.pl \\\n    --plugin=network::acmepacket::snmp::plugin \\\n    --mode=system-usage \\\n    --hostname=10.30.2.114 \\\n    --snmp-version='2c' \\\n    --snmp-community='acme_ro' \\\n    --warning-cpu-load='90' \\\n    --critical-cpu-load='95' \\\n    --verbose\n")),(0,r.kt)("p",null,"Expected command output is shown below:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"OK: System usage is ok | 'health.score.percentage'=100.00%;;;0;100 'cpu.utilization.percentage'=2.00%;0:90;0:95;0;100 'memory.usage.percentage'=9.00%;;;0;100 'licence.usage.percentage'=0.00%;;;0;100 'sessions.current.count'=0;;;0; 'calls.current.count'=0/s;;;0;\nchecking system\n    health score: 100.00 %\n    cpu load: 2.00 %\n    memory used: 9.00 %\n    license used: 0.00 %\n    current sessions: 0\n    current calls: 0/s\n    replication state: active\n")),(0,r.kt)("p",null,"The command above monitors Acme Packet (",(0,r.kt)("inlineCode",{parentName:"p"},"--plugin=network::acmepacket::snmp::plugin --mode=system-usage"),") identified\nby the IP address ",(0,r.kt)("em",{parentName:"p"},"10.30.2.114")," (",(0,r.kt)("inlineCode",{parentName:"p"},"--hostname=10.30.2.114"),"). As the Plugin is using the SNMP protocol to request the device, the related\n",(0,r.kt)("em",{parentName:"p"},"community")," and ",(0,r.kt)("em",{parentName:"p"},"version")," are specified (",(0,r.kt)("inlineCode",{parentName:"p"},"--snmp-version='2c' --snmp-community='acme_ro'"),")."),(0,r.kt)("p",null,"This command would trigger a WARNING alarm if cpu utilization over 90%\n(",(0,r.kt)("inlineCode",{parentName:"p"},"--warning-cpu-load='90'"),") and a CRITICAL alarm over 95% (",(0,r.kt)("inlineCode",{parentName:"p"},"--critical-cpu-load='95'"),")."),(0,r.kt)("p",null,"All the options as well as all the available thresholds can be displayed by adding the  ",(0,r.kt)("inlineCode",{parentName:"p"},"--help"),"\nparameter to the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins/centreon_acmepacket_snmp.pl \\\n    --plugin=network::acmepacket::snmp::plugin \\\n    --mode=system-usage \\\n    --help\n")),(0,r.kt)("h3",i({},{id:"troubleshooting"}),"Troubleshooting"),(0,r.kt)("h4",i({},{id:"unknown-snmp-get-request--timeout"}),"UNKNOWN: SNMP GET Request : Timeout"),(0,r.kt)("p",null,"If you get this message, you're probably facing one of theses issues:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The SNMP agent of the device isn't started or is misconfigured"),(0,r.kt)("li",{parentName:"ul"},"An external device is blocking the request (firewall, ...)")),(0,r.kt)("h4",i({},{id:"unknown-snmp-get-request--cant-get-a-single-value"}),"UNKNOWN: SNMP GET Request : Cant get a single value."),(0,r.kt)("p",null,"This error message often refers to the following issues: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The agent doesn't support the MIB used by the plugin"),(0,r.kt)("li",{parentName:"ul"},"The targeted SNMP OID cannot be fetched because of insufficient privileges on the device.\nSNMP Agent must be capable of accessing to the enterprise branch: .1.3.6.1.4.1.9148")))}k.isMDXComponent=!0},7626:(t,e,a)=>{a.d(e,{Z:()=>s});var r=a(67294),n=a(86010);const l="tabItem_Ymn6";function i(){return i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t},i.apply(this,arguments)}function s({children:t,hidden:e,className:a}){return r.createElement("div",i({role:"tabpanel",className:(0,n.Z)(l,a)},{hidden:e}),t)}},67709:(t,e,a)=>{a.d(e,{Z:()=>u});var r=a(67294),n=a(86010),l=a(90980),i=a(35715),s=a(8854),o=a(8241);const p="tabList__CuJ",m="tabItem_LNqP";function c(){return c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t},c.apply(this,arguments)}function d(t){var e;const{lazy:a,block:l,defaultValue:d,values:u,groupId:k,className:N}=t,f=r.Children.map(t.children,(t=>{if((0,r.isValidElement)(t)&&"value"in t.props)return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=null!=u?u:f.map((({props:{value:t,label:e,attributes:a}})=>({value:t,label:e,attributes:a}))),b=(0,i.l)(g,((t,e)=>t.value===e.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var y;const h=null===d?d:null!==(y=null!=d?d:null===(e=f.find((t=>t.props.default)))||void 0===e?void 0:e.props.value)&&void 0!==y?y:f[0].props.value;if(null!==h&&!g.some((t=>t.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${g.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:_}=(0,s.U)(),[T,P]=(0,r.useState)(h),w=[],{blockElementScrollPositionUntilNextRender:S}=(0,o.o5)();if(null!=k){const t=v[k];null!=t&&t!==T&&g.some((e=>e.value===t))&&P(t)}const A=t=>{const e=t.currentTarget,a=w.indexOf(e),r=g[a].value;r!==T&&(S(e),P(r),null!=k&&_(k,String(r)))},O=t=>{let e=null;switch(t.key){case"ArrowRight":{const r=w.indexOf(t.currentTarget)+1;var a;e=null!==(a=w[r])&&void 0!==a?a:w[0];break}case"ArrowLeft":{const a=w.indexOf(t.currentTarget)-1;var r;e=null!==(r=w[a])&&void 0!==r?r:w[w.length-1];break}}null==e||e.focus()};return r.createElement("div",{className:(0,n.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":l},N)},g.map((({value:t,label:e,attributes:a})=>r.createElement("li",c({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:t=>w.push(t),onKeyDown:O,onFocus:A,onClick:A},a,{className:(0,n.Z)("tabs__item",m,null==a?void 0:a.className,{"tabs__item--active":T===t})}),null!=e?e:t)))),a?(0,r.cloneElement)(f.filter((t=>t.props.value===T))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((t,e)=>(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==T})))))}function u(t){const e=(0,l.Z)();return r.createElement(d,c({key:String(e)},t))}}}]);