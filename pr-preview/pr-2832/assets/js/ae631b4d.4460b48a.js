"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[25175],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},40782:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>m});n(67294);var a=n(3905),r=n(67709),o=n(7626);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},l.apply(this,arguments)}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const s={id:"cloud-prometheus-api",title:"Prometheus Server"},u=void 0,p={unversionedId:"integrations/plugin-packs/procedures/cloud-prometheus-api",id:"integrations/plugin-packs/procedures/cloud-prometheus-api",title:"Prometheus Server",description:"Overview",source:"@site/pp/integrations/plugin-packs/procedures/cloud-prometheus-api.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/cloud-prometheus-api",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/cloud-prometheus-api",draft:!1,tags:[],version:"current",frontMatter:{id:"cloud-prometheus-api",title:"Prometheus Server"},sidebar:"pp",previous:{title:"OVH",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/cloud-ovh-restapi"},next:{title:"Node Exporter",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/cloud-prometheus-node-exporter-api"}},c={},m=[{value:"Overview",id:"overview",level:2},{value:"Plugin Pack Assets",id:"plugin-pack-assets",level:2},{value:"Monitored Objects",id:"monitored-objects",level:3},{value:"Collected Metrics",id:"collected-metrics",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Host",id:"host",level:3},{value:"FAQ",id:"faq",level:2},{value:"How to check in the CLI that the configuration is OK and what are the main options for ?",id:"how-to-check-in-the-cli-that-the-configuration-is-ok-and-what-are-the-main-options-for-",level:3},{value:"How to use the generic Expression mode ?",id:"how-to-use-the-generic-expression-mode-",level:3},{value:"<code>--query</code> option and QUERIES macro",id:"--query-option-and-queries-macro",level:4},{value:"<code>--instance</code> option and INSTANCE macro",id:"--instance-option-and-instance-macro",level:4},{value:"<code>--multiple-output</code>/<code>--output</code> options and MULTIPLEOUTPUT/OUTPUT macros",id:"--multiple-output--output-options-and-multipleoutputoutput-macros",level:4},{value:"<code>--*-status</code> options and *STATUS macros",id:"---status-options-and-status-macros",level:4},{value:"Expected output and macros summary",id:"expected-output-and-macros-summary",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"UNKNOWN: 500 Can&#39;t connect to amzprometheus.int.centreon.com:9090 (&lt;error_text) |",id:"unknown-500-cant-connect-to-amzprometheusintcentreoncom9090-error_text-",level:3},{value:"UNKNOWN: 400 Bad Request |",id:"unknown-400-bad-request-",level:3}],d={toc:m};function h(e){var{components:t}=e,n=i(e,["components"]);return(0,a.kt)("wrapper",l({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",l({},{id:"overview"}),"Overview"),(0,a.kt)("p",null,"Prometheus is a metric-oriented monitoring system scraping data from various exporter\nover the HTTP protocol."),(0,a.kt)("p",null,"The Centreon Plugin Pack takes advantage of PromQL and Prometheus APIs to get information\nfrom the time-series database."),(0,a.kt)("h2",l({},{id:"plugin-pack-assets"}),"Plugin Pack Assets"),(0,a.kt)("h3",l({},{id:"monitored-objects"}),"Monitored Objects"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"All metrics stored by Prometheus"),(0,a.kt)("li",{parentName:"ul"},"Status of the targets")),(0,a.kt)("h3",l({},{id:"collected-metrics"}),"Collected Metrics"),(0,a.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"Expression",label:"Expression",mdxType:"TabItem"},(0,a.kt)("p",null,"Generic mode to perform PromQL queries"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),(0,a.kt)("em",{parentName:"td"},"instance"),"#",(0,a.kt)("em",{parentName:"td"},"centreon_prometheus_metric_display_name")),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Any metric")))),(0,a.kt)("p",null,"E.g: Throttled CPU metrics on a specific node: '",(0,a.kt)("em",{parentName:"p"},"amzkubemaster.int.centreon.com"),"#",(0,a.kt)("em",{parentName:"p"},"throttled"),"'=2.4699414529294077;;;; ")),(0,a.kt)(o.Z,{value:"Target-Status",label:"Target-Status",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"targets.active.count"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Number of active targets")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"targets.dropped.count"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Number of dropped targets")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"targets.up.count"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Number of up targets")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"targets.down.count"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Number of down targets")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"targets.unknown.count"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Number of unknown targets")))))),(0,a.kt)("h2",l({},{id:"prerequisites"}),"Prerequisites"),(0,a.kt)("p",null,"The Centreon Poller should be able to perform queries against Prometheus API over\nHTTP. "),(0,a.kt)("h2",l({},{id:"setup"}),"Setup"),(0,a.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Centreon Poller expected to query Prometheus:")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Cloud-Prometheus-Api\n")),(0,a.kt)("ol",l({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,a.kt)("em",{parentName:"li"},"Prometheus API"),' Centreon Plugin-Pack on the "Configuration > Plugin Packs > Manager" page'))),(0,a.kt)(o.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Centreon poller expected toto query Prometheus:")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Cloud-Prometheus-Api\n")),(0,a.kt)("ol",l({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"Install the Centreon Plugin-Pack RPM on the Centreon Central server:")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"yum install centreon-pack-cloud-prometheus-api\n")),(0,a.kt)("ol",l({},{start:3}),(0,a.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,a.kt)("em",{parentName:"li"},"Prometheus API"),' Centreon Plugin-Pack on the "Configuration > Plugin Packs > Manager" page')))),(0,a.kt)("h2",l({},{id:"configuration"}),"Configuration"),(0,a.kt)("h3",l({},{id:"host"}),"Host"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'Log into Centreon and add a new Host through "Configuration > Hosts".'),(0,a.kt)("li",{parentName:"ul"},"Select the ",(0,a.kt)("em",{parentName:"li"},"Cloud-Prometheus-Api-custom")," template to apply to the Host."),(0,a.kt)("li",{parentName:"ul"},"Once the template applied, some Macros marked as 'Mandatory' hereafter have to be configured.")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Mandatory"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Nom"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"X"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"PROMETHEUSAPIHOSTNAME"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"FQDN or IP of your Prometheus Host")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"X"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"PROMETHEUSAPIPORT"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Port Prometheus listens connection from")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"X"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"PROMETHEUSAPIURL"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"URL Path to reach API (Default: '/api/v1)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"X"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"PROMETHEUSAPIPROTO"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Protocol used by Prom API (Default: 'http')")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"})),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"EXTRAOPTIONS"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Additionnal flags placeholder, e.g: --use-new-perfdata")))),(0,a.kt)("h2",l({},{id:"faq"}),"FAQ"),(0,a.kt)("h3",l({},{id:"how-to-check-in-the-cli-that-the-configuration-is-ok-and-what-are-the-main-options-for-"}),"How to check in the CLI that the configuration is OK and what are the main options for ?"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: The test below assumes that you are using the Plugin Pack on top of a Prometheus Server.")),(0,a.kt)("p",null,"Once the Plugin installed, log into your Centreon Poller CLI using the ",(0,a.kt)("em",{parentName:"p"},"centreon-engine"),"\nuser account and test the Plugin by running the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_prometheus_api.pl \\\n    --plugin=cloud::prometheus::restapi::plugin \\\n    --mode=target-status \\\n    --hostname=amzprometheus.int.centreon.com \\\n    --url-path='/api/v1' --port='80' --proto='http' \\\n    --filter-label='job,coredns' \\\n    --warning-status='' --critical-status='%{health} !~ /up/' \n")),(0,a.kt)("p",null,"Expected command output is shown below:"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"OK: Targets Active: 2, Dropped: 175, Up: 2, Down: 0, Unknown: 0 - All targets status are ok | 'targets.active.count'=2;;;0; 'targets.dropped.count'=175;;;0; 'targets.up.count'=2;;;0; 'targets.down.count'=0;;;0; 'targets.unknown.count'=0;;;0;\nTarget 'http://10.244.1.249:9153/metrics' health is 'up' [pod = coredns-74ff55c5b-g4hmt][namespace = kube-system][service = prometheus-operator-coredns][instance = 10.244.1.249:9153][job = coredns][endpoint = http-metrics]\nTarget 'http://10.244.2.5:9153/metrics' health is 'up' [pod = coredns-74ff55c5b-vh9zt][namespace = kube-system][service = prometheus-operator-coredns][instance = 10.244.2.5:9153][job = coredns][endpoint = http-metrics]\n")),(0,a.kt)("p",null,"The command above check the status of the targets (",(0,a.kt)("inlineCode",{parentName:"p"},"--mode=target-status"),") linked\nto a Prometheus server (",(0,a.kt)("inlineCode",{parentName:"p"},"--hostname=amzprometheus.int.centreon.com"),")  exposing its API\nover HTTP and listnening on port 80 (",(0,a.kt)("inlineCode",{parentName:"p"},"--port='80' --proto='http'"),"). "),(0,a.kt)("p",null,"Only targets linked with the coredns job label are checked (",(0,a.kt)("inlineCode",{parentName:"p"},"--filter-label='job,coredns'"),"). "),(0,a.kt)("p",null,'The command triggers a CRITICAL if any of the Target status is not equal to "up". '),(0,a.kt)("h3",l({},{id:"how-to-use-the-generic-expression-mode-"}),"How to use the generic Expression mode ?"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: The mode below can be used with Host that are not Prometheus Server even if the metric collection use it. The Host must inherit from the ",(0,a.kt)("em",{parentName:"p"},"Cloud-Prometheus-Api-custom")," Template and the Service needs to be created manually using the ",(0,a.kt)("em",{parentName:"p"},"Cloud-Prometheus-Expression-Api-custom")," Service Template.")),(0,a.kt)("p",null,"Nothing is better than a clear example to understand how the Expression generic mode works:"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_prometheus_api.pl \\\n    --plugin=cloud::prometheus::restapi::plugin \\\n    --mode=expression \\\n    --hostname=amzprometheus.int.centreon.com \\\n    --url-path='/api/v1' --port='80' --proto='http' \\\n    --query='cpu_requests,sum by (node) (kube_pod_container_resource_requests_cpu_cores) / sum by (node) (kube_node_status_capacity_cpu_cores) * 100' \\\n    --output='%{instance} CPU Requests: %{cpu_requests}%' --multiple-output='Nodes CPU Requests within bounds' \\\n    --instance='node' \\\n    --warning-status='%{cpu_requests} > 60' --critical-status='%{cpu_requests} > 70' \\\n    --use-new-perfdata --verbose \n")),(0,a.kt)("h4",l({},{id:"--query-option-and-queries-macro"}),(0,a.kt)("inlineCode",{parentName:"h4"},"--query")," option and QUERIES macro"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"--query")," option allows to define two things:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the Centreon metric name (",(0,a.kt)("inlineCode",{parentName:"li"},"cpu_requests"),")"),(0,a.kt)("li",{parentName:"ul"},"the PromQL query (",(0,a.kt)("inlineCode",{parentName:"li"},"sum by (node) (kube_pod_container_resource_requests_cpu_cores) / sum by (node) (kube_node_status_capacity_cpu_cores) * 100"),")")),(0,a.kt)("p",null,"In the Service definition, you can specify several queries that's why the QUERIES macro\nexceptionnaly includes the option definition. Here, QUERIES value would be \"--query='cpu_requests,sum by (node) (kube_pod_container_resource_requests_cpu_cores) / sum by (node) (kube_node_status_capacity_cpu_cores) * 100'\". "),(0,a.kt)("h4",l({},{id:"--instance-option-and-instance-macro"}),(0,a.kt)("inlineCode",{parentName:"h4"},"--instance")," option and INSTANCE macro"),(0,a.kt)("p",null,"The instance option explicits the Prometheus metric dimension/label the Plugin will highlight\nin the graphs (",(0,a.kt)("inlineCode",{parentName:"p"},"--instance='node'"),'). The INSTANCE macro value would be "node" in this example. '),(0,a.kt)("h4",l({},{id:"--multiple-output--output-options-and-multipleoutputoutput-macros"}),(0,a.kt)("inlineCode",{parentName:"h4"},"--multiple-output"),"/",(0,a.kt)("inlineCode",{parentName:"h4"},"--output")," options and MULTIPLEOUTPUT/OUTPUT macros"),(0,a.kt)("p",null,"The output-related options gives ability to tune output messages of the\ncheck in the following cases:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Check a metric on multiple instances"),(0,a.kt)("li",{parentName:"ul"},"Check returning an error")),(0,a.kt)("p",null,'Values can be specified through the corresponding macros, in this example the value of OUTPUT macro\nwould be "%{instance} CPU Requests: %{cpu_requests}%". Note that we use the Centreon label defined in the ',(0,a.kt)("inlineCode",{parentName:"p"},"--query"),"\noption to use the obtained value). We also use the '%{instance}' keyword to display the node name. "),(0,a.kt)("p",null,'The MULTIPLEOUTPUT value would be "Nodes CPU Requests within bounds"'),(0,a.kt)("h4",l({},{id:"---status-options-and-status-macros"}),(0,a.kt)("inlineCode",{parentName:"h4"},"--\\*-status")," options and ","*","STATUS macros"),(0,a.kt)("p",null,"--warning-status and --critical-status purpose is to define when the Plugin will raise an alert. "),(0,a.kt)("p",null,"In the command above, the check triggers a ",(0,a.kt)("em",{parentName:"p"},"WARNING")," alarm when the 'cpu_requests' value is above 60 and a\n",(0,a.kt)("em",{parentName:"p"},"CRITICAL")," one when it is above 70. "),(0,a.kt)("p",null,"Note that the Centreon label defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"--query")," options is used again to compare\nthe obtained value with thresholds. "),(0,a.kt)("p",null,"The macros value would be '%{cpu_requests} > 60' for WARNINGSTATUS and '%{cpu_requests} > 70'\nfor CRITICALSTATUS."),(0,a.kt)("h4",l({},{id:"expected-output-and-macros-summary"}),"Expected output and macros summary"),(0,a.kt)("p",null,"If everything is OK, a output similar to the one below should be displayed: "),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"OK: Nodes CPU Requests within bounds | 'amzkubemaster.int.centreon.com#cpu_requests'=37.5;;;; 'amzkubenode1.int.centreon.com#cpu_requests'=35;;;; 'amzkubenode2.int.centreon.com#cpu_requests'=30;;;;\namzkubemaster.int.centreon.com CPU Requests: 37.5%\namzkubenode1.int.centreon.com CPU Requests: 35%\namzkubenode2.int.centreon.com CPU Requests: 30%\n")),(0,a.kt)("p",null,"Here is a summary of the Service's macros definitions: "),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Nom"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"QUERIES"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"--query='cpu_requests,sum by (node) (kube_pod_container_resource_requests_cpu_cores) / sum by (node) (kube_node_status_capacity_cpu_cores) * 100'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"INSTANCE"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"node")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"OUTPUT"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"URL Path to reach API (Default: '/api/v1)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"MULTIPLEOUTPUT"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Nodes CPU Requests within bounds")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"WARNINGSTATUS"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"%{cpu_requests} > 60")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"CRITICALSTATUS"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"%{cpu_requests} > 70")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"EXTRAOPTIONS"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"--verbose --use-new-perfdata")))),(0,a.kt)("h2",l({},{id:"troubleshooting"}),"Troubleshooting"),(0,a.kt)("h3",l({},{id:"unknown-500-cant-connect-to-amzprometheusintcentreoncom9090-error_text-"}),"UNKNOWN: 500 Can't connect to amzprometheus.int.centreon.com:9090 (<error_text) |"),(0,a.kt)("p",null,"When facing this error message, check that port, hostname are OK and double check the\nconnection between your Centreon Poller and the Prometheus Server. "),(0,a.kt)("p",null,"The <error_text> should give more information about the root cause "),(0,a.kt)("h3",l({},{id:"unknown-400-bad-request-"}),"UNKNOWN: 400 Bad Request |"),(0,a.kt)("p",null,"The PromQL query expression is invalid. Check that it works within the Prometheus WebUI."))}h.isMDXComponent=!0},7626:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},l.apply(this,arguments)}function i({children:e,hidden:t,className:n}){return a.createElement("div",l({role:"tabpanel",className:(0,r.Z)(o,n)},{hidden:t}),e)}},67709:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(67294),r=n(86010),o=n(90980),l=n(35715),i=n(8854),s=n(8241);const u="tabList__CuJ",p="tabItem_LNqP";function c(){return c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},c.apply(this,arguments)}function m(e){var t;const{lazy:n,block:o,defaultValue:m,values:d,groupId:h,className:k}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=null!=d?d:g.map((({props:{value:e,label:t,attributes:n}})=>({value:e,label:t,attributes:n}))),f=(0,l.l)(b,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var N;const v=null===m?m:null!==(N=null!=m?m:null===(t=g.find((e=>e.props.default)))||void 0===t?void 0:t.props.value)&&void 0!==N?N:g[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:P}=(0,i.U)(),[T,w]=(0,a.useState)(v),O=[],{blockElementScrollPositionUntilNextRender:C}=(0,s.o5)();if(null!=h){const e=y[h];null!=e&&e!==T&&b.some((t=>t.value===e))&&w(e)}const _=e=>{const t=e.currentTarget,n=O.indexOf(t),a=b[n].value;a!==T&&(C(t),w(a),null!=h&&P(h,String(a)))},q=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=O.indexOf(e.currentTarget)+1;var n;t=null!==(n=O[a])&&void 0!==n?n:O[0];break}case"ArrowLeft":{const n=O.indexOf(e.currentTarget)-1;var a;t=null!==(a=O[n])&&void 0!==a?a:O[O.length-1];break}}null==t||t.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":o},k)},b.map((({value:e,label:t,attributes:n})=>a.createElement("li",c({role:"tab",tabIndex:T===e?0:-1,"aria-selected":T===e,key:e,ref:e=>O.push(e),onKeyDown:q,onFocus:_,onClick:_},n,{className:(0,r.Z)("tabs__item",p,null==n?void 0:n.className,{"tabs__item--active":T===e})}),null!=t?t:e)))),n?(0,a.cloneElement)(g.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function d(e){const t=(0,o.Z)();return a.createElement(m,c({key:String(t)},e))}}}]);