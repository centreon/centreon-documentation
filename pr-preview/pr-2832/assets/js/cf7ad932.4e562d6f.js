"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[15097],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>u});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),s=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},d=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),c=s(a),u=n,k=c["".concat(p,".").concat(u)]||c[u]||m[u]||l;return a?r.createElement(k,o(o({ref:e},d),{},{components:a})):r.createElement(k,o({ref:e},d))}));function u(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:n,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},65822:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>s,default:()=>k,frontMatter:()=>p,metadata:()=>d,toc:()=>c});a(67294);var r=a(3905),n=a(67709),l=a(7626);function o(){return o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t},o.apply(this,arguments)}function i(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}const p={id:"hardware-storage-dell-me4-restapi",title:"Dell ME4 Rest API"},s=void 0,d={unversionedId:"integrations/plugin-packs/procedures/hardware-storage-dell-me4-restapi",id:"integrations/plugin-packs/procedures/hardware-storage-dell-me4-restapi",title:"Dell ME4 Rest API",description:"Pack Assets",source:"@site/pp/integrations/plugin-packs/procedures/hardware-storage-dell-me4-restapi.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/hardware-storage-dell-me4-restapi",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/hardware-storage-dell-me4-restapi",draft:!1,tags:[],version:"current",frontMatter:{id:"hardware-storage-dell-me4-restapi",title:"Dell ME4 Rest API"},sidebar:"pp",previous:{title:"Dell MD3000",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/hardware-storage-dell-md3000-smcli"},next:{title:"Dell ML6000",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/hardware-storage-dell-ml6000-snmp"}},m={},c=[{value:"Pack Assets",id:"pack-assets",level:2},{value:"Monitored Objects",id:"monitored-objects",level:3},{value:"Discovery rules",id:"discovery-rules",level:3},{value:"Collected Metrics",id:"collected-metrics",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Host configuration",id:"host-configuration",level:2},{value:"How to test the Plugin and what are the main options for?",id:"how-to-test-the-plugin-and-what-are-the-main-options-for",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],u={toc:c};function k(t){var{components:e}=t,a=i(t,["components"]);return(0,r.kt)("wrapper",o({},u,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",o({},{id:"pack-assets"}),"Pack Assets"),(0,r.kt)("h3",o({},{id:"monitored-objects"}),"Monitored Objects"),(0,r.kt)("p",null,"The Pack Dell ME4 collects metrics for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Controllers"),(0,r.kt)("li",{parentName:"ul"},"Hardware"),(0,r.kt)("li",{parentName:"ul"},"Interfaces"),(0,r.kt)("li",{parentName:"ul"},"Volumes")),(0,r.kt)("h3",o({},{id:"discovery-rules"}),"Discovery rules"),(0,r.kt)(n.Z,{groupId:"sync",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Services",label:"Services",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Rule name"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"HW-Storage-Dell-Me4-Restapi-Controller-Statistics-Name"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Discover controllers and monitor statistics")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"HW-Storage-Dell-Me4-Restapi-Volume-Statistics-Name"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Discover volumes and monitor statistics")))))),(0,r.kt)("h3",o({},{id:"collected-metrics"}),"Collected Metrics"),(0,r.kt)(n.Z,{groupId:"sync",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Controller-statistics",label:"Controller-statistics",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.data.read.bytespersecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Amount of data read"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"B/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.data.written.bytespersecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Amount of data written"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"B/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.reads.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller whose host ports had I/O activity, the number of read operations"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.writes.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller whose host ports had I/O activity, the number of write operations"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.data.transfer.bytespersecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"The data transfer rate"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"B/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.iops.count"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Input/output operations per second"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.commands.forwarded.count"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"The current count of commands that are being forwarded or are queued to be forwarded to the partner controller for processing"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.cache.write.usage.percentage"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Percentage of write cache in use"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.cache.write.hits.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller that owns the volume, the number of times the block written to is found in cache"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.cache.write.misses.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller that owns the volume, the number of times the block written to is not found in cache"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.cache.read.hits.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller that owns the volume, the number of times the block to be read is found in cache"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.cache.read.misses.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller that owns the volume, the number of times the block to be read is not found in cache"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"controller","_","id"),"#","controller.cpu.utilization.percentage"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Percentage of time the CPU is busy"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"%"))))),(0,r.kt)(l.Z,{value:"Hardware",label:"Hardware",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"controller status"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Status/health/redundancy of the controller"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"disk status"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Status/health/state of the disk"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"disk","_","instance"),"#","hardware.disk.temperature.celsius"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Temperature of the disk"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"fan status"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Status/health of the fan"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"fan","_","instance"),"#","hardware.fan.speed.rpm"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Speed of the fan"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"rpm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"fru status"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Status of the FRU"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"psu status"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Status/health of the power supply"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"sensor status"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Status of the sensor"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sensor","_","instance"),"#","hardware.sensor.voltage.volt"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Voltage of the sensor"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"V")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sensor","_","instance"),"#","hardware.sensor.current.ampere"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Current of the sensor"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sensor","_","instance"),"#","hardware.sensor.temperature.celsius"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"temperature of the sensor"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"sensor","_","instance"),"#","hardware.sensor.capacity.percentage"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Charge capacity of the sensor"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"volume status"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Status of the volume"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"})))))),(0,r.kt)(l.Z,{value:"Interfaces",label:"Interfaces",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"port status"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"port health status"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"port","_","name"),"#","port.io.read.usage.iops"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Number of read operations"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"port","_","name"),"#","port.io.write.usage.iops"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Number of write operations"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"port","_","name"),"#","port.traffic.read.usage.bitspersecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Amount of data read"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"b/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"port","_","name"),"#","port.traffic.write.usage.bitspersecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Amount of data written"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"b/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"port","_","name"),"~",(0,r.kt)("em",{parentName:"td"},"interface","_","name"),"#","port.interface.disparity.errors.count"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"The number of doublewords containing running disparity errors that have been received by the PHY, not including those received during Link Reset sequences"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"port","_","name"),"~",(0,r.kt)("em",{parentName:"td"},"interface","_","name"),"#","port.interface.lost.dwords.count"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"The number of times the PHY has lost doubleword synchronization and restarted the Link Reset sequence"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"port","_","name"),"~",(0,r.kt)("em",{parentName:"td"},"interface","_","name"),"#","port.interface.invalid.dwords.count"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"The number of invalid doublewords that have been received by the PHY, not including those received during Link Reset sequences"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"})))))),(0,r.kt)(l.Z,{value:"Volume-statistics",label:"Volume-statistics",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.data.read.bytespersecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Amount of data read"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"B/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.data.written.bytespersecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Amount of data written"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"B/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.reads.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"The number of read operations"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.writes.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"The number of write operations"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.data.transfer.bytespersecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"The data transfer rate"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"B/s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.iops.ops"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Input/output operations per second"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.cache.write.usage.percentage"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"The percentage of cache used on behalf of this volume"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.cache.write.hits.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller that owns the volume, the number of times the block written to is found in cache"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.cache.write.misses.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller that owns the volume, the number of times the block written to is not found in cache"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.cache.read.hits.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller that owns the volume, the number of times the block to be read is found in cache"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),(0,r.kt)("em",{parentName:"td"},"volume","_","name"),"#","volume.cache.read.misses.persecond"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"For the controller that owns the volume, the number of times the block to be read is not found in cache"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}))))))),(0,r.kt)("h2",o({},{id:"prerequisites"}),"Prerequisites"),(0,r.kt)("p",null,"To control your Dell ME4, the Rest API must be configured."),(0,r.kt)("p",null,"E.g: ",(0,r.kt)("a",o({parentName:"p"},{href:"https://www.dell.com/support/manuals/fr-fr/powervault-me4024/me4_series_cli_pub/using-a-script-to-access-the-cli?guid=guid-9ae5ccd6-a207-42df-b2f3-1e02a487a354&lang=en-us"}),"https://www.dell.com/support/manuals/fr-fr/powervault-me4024/me4_series_cli_pub/using-a-script-to-access-the-cli?guid=guid-9ae5ccd6-a207-42df-b2f3-1e02a487a354&lang=en-us")),(0,r.kt)("h2",o({},{id:"setup"}),"Setup"),(0,r.kt)(n.Z,{groupId:"sync",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install the Centreon Plugin on every Poller:")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Hardware-Storage-Dell-Me4-Restapi\n")),(0,r.kt)("ol",o({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"On the Centreon Web interface in ",(0,r.kt)("strong",{parentName:"li"},"Configuration > Plugin packs > Manager"),", install the ",(0,r.kt)("em",{parentName:"li"},"Dell Me4 Rest API")," Pack"))),(0,r.kt)(l.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install the Centreon Plugin on every Poller:")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Hardware-Storage-Dell-Me4-Restapi\n")),(0,r.kt)("ol",o({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"On the Centreon Central server, install the Centreon Pack from the RPM:")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yum install centreon-pack-hardware-storage-dell-me4-restapi\n")),(0,r.kt)("ol",o({},{start:3}),(0,r.kt)("li",{parentName:"ol"},"On the Centreon Web interface in ",(0,r.kt)("strong",{parentName:"li"},"Configuration > Plugin packs > Manager"),", install the ",(0,r.kt)("em",{parentName:"li"},"Dell Me4 Rest API")," Pack")))),(0,r.kt)("h2",o({},{id:"host-configuration"}),"Host configuration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add a new Host and fill the ",(0,r.kt)("em",{parentName:"li"},"IP Address/FQDN"),", ",(0,r.kt)("em",{parentName:"li"},"SNMP Version")," and ",(0,r.kt)("em",{parentName:"li"},"SNMP Community")," fields according to the device's configuration"),(0,r.kt)("li",{parentName:"ul"},"Apply the ",(0,r.kt)("em",{parentName:"li"},"HW-Storage-Dell-Me4-Restapi-custom")," Host Template")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Once the template applied, some Macros have to be configured:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Mandatory"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Name"),(0,r.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"X"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"APIPORT"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Port used (Default: 443)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"X"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"APIPROTO"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Specify https if needed (Default: 'https')")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"X"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"APIUSERNAME"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Api username")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"X"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"APIPASSWORD"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Api password")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:"left"})),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"APIEXTRAOPTIONS"),(0,r.kt)("td",o({parentName:"tr"},{align:"left"}),"Any extra option you may want to add to the command (eg. a --verbose flag)")))),(0,r.kt)("h2",o({},{id:"how-to-test-the-plugin-and-what-are-the-main-options-for"}),"How to test the Plugin and what are the main options for?"),(0,r.kt)("p",null,"Once the plugin installed, log into your Centreon Poller CLI using the ",(0,r.kt)("em",{parentName:"p"},"centreon-engine")," user account\nand test the Plugin by running the following command (Parameters such as ",(0,r.kt)("inlineCode",{parentName:"p"},"api-username")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"api-password"),"have to be adjusted):"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins/centreon_dell_me4_restapi.pl \\\n    --plugin=storage::dell::me4::restapi::plugin \\\n    --mode=interfaces \\\n    --hostname='10.30.2.79' \\\n    --port='443' \\\n    --proto='https' \\\n    --api-username='myapiusername' \\\n    --api-password='myapipassword' \\\n    --filter-port-name='A0' \\\n    --verbose\n")),(0,r.kt)("p",null,"Expected command output is shown below:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"OK: port 'A0' status: up [health: ok], read iops: 94.52, write iops: 161.11, read traffic: 1.29 Mb/s - All interfaces are ok | 'A0#port.io.read.usage.iops'=94.52iops;;;0; 'A0#port.io.write.usage.iops'=161.11iops;;;0; 'A0#port.traffic.read.usage.bitspersecond'=1287234b/s;;;0; 'A0~0#port.interface.disparity.errors.count'=0;;;0; 'A0~0#port.interface.lost.dwords.count'=0;;;0; 'A0~0#port.interface.invalid.dwords.count'=0;;;0; 'A0~1#port.interface.disparity.errors.count'=0;;;0; 'A0~1#port.interface.lost.dwords.count'=0;;;0; 'A0~1#port.interface.invalid.dwords.count'=0;;;0; 'A0~2#port.interface.disparity.errors.count'=0;;;0; 'A0~2#port.interface.lost.dwords.count'=0;;;0; 'A0~2#port.interface.invalid.dwords.count'=0;;;0; 'A0~3#port.interface.disparity.errors.count'=0;;;0; 'A0~3#port.interface.lost.dwords.count'=0;;;0; 'A0~3#port.interface.invalid.dwords.count'=0;;;0;\nchecking port 'A0'\n    status: up [health: ok], read iops: 94.52, write iops: 161.11, read traffic: 1.29 Mb/s\n    interface '0' disparity errors: 0, lost dwords: 0, invalid dwords: 0\n    interface '1' disparity errors: 0, lost dwords: 0, invalid dwords: 0\n    interface '2' disparity errors: 0, lost dwords: 0, invalid dwords: 0\n    interface '3' disparity errors: 0, lost dwords: 0, invalid dwords: 0\n")),(0,r.kt)("p",null,"The command above monitors interfaces statistics  (",(0,r.kt)("inlineCode",{parentName:"p"},"--mode=interfaces"),")."),(0,r.kt)("p",null,"It uses api-username (",(0,r.kt)("inlineCode",{parentName:"p"},"--api-username='myapiusername'"),"), an api-password (",(0,r.kt)("inlineCode",{parentName:"p"},"--api-password='myapipassword'"),")\nand it connects to the host ",(0,r.kt)("em",{parentName:"p"},"10.30.2.79")," (",(0,r.kt)("inlineCode",{parentName:"p"},"--hostname='10.30.2.79'"),")\non the port 443 (",(0,r.kt)("inlineCode",{parentName:"p"},"--port='443'"),") using https (",(0,r.kt)("inlineCode",{parentName:"p"},"--proto='https'"),")."),(0,r.kt)("p",null,"All the options as well as all the available thresholds can be displayed by adding the  ",(0,r.kt)("inlineCode",{parentName:"p"},"--help"),"\nparameter to the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins/centreon_dell_me4_restapi.pl \\\n    --plugin=storage::dell::me4::restapi::plugin \\\n    --mode=interfaces \\\n    --help\n")),(0,r.kt)("h2",o({},{id:"troubleshooting"}),"Troubleshooting"),(0,r.kt)("p",null,(0,r.kt)("a",o({parentName:"p"},{href:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/getting-started/how-to-guides/troubleshooting-plugins"}),"Troubleshooting plugins")))}k.isMDXComponent=!0},7626:(t,e,a)=>{a.d(e,{Z:()=>i});var r=a(67294),n=a(86010);const l="tabItem_Ymn6";function o(){return o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t},o.apply(this,arguments)}function i({children:t,hidden:e,className:a}){return r.createElement("div",o({role:"tabpanel",className:(0,n.Z)(l,a)},{hidden:e}),t)}},67709:(t,e,a)=>{a.d(e,{Z:()=>u});var r=a(67294),n=a(86010),l=a(90980),o=a(35715),i=a(8854),p=a(8241);const s="tabList__CuJ",d="tabItem_LNqP";function m(){return m=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t},m.apply(this,arguments)}function c(t){var e;const{lazy:a,block:l,defaultValue:c,values:u,groupId:k,className:f}=t,g=r.Children.map(t.children,(t=>{if((0,r.isValidElement)(t)&&"value"in t.props)return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),N=null!=u?u:g.map((({props:{value:t,label:e,attributes:a}})=>({value:t,label:e,attributes:a}))),h=(0,o.l)(N,((t,e)=>t.value===e.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var b;const y=null===c?c:null!==(b=null!=c?c:null===(e=g.find((t=>t.props.default)))||void 0===e?void 0:e.props.value)&&void 0!==b?b:g[0].props.value;if(null!==y&&!N.some((t=>t.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${N.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:w}=(0,i.U)(),[O,P]=(0,r.useState)(y),_=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=k){const t=v[k];null!=t&&t!==O&&N.some((e=>e.value===t))&&P(t)}const A=t=>{const e=t.currentTarget,a=_.indexOf(e),r=N[a].value;r!==O&&(T(e),P(r),null!=k&&w(k,String(r)))},C=t=>{let e=null;switch(t.key){case"ArrowRight":{const r=_.indexOf(t.currentTarget)+1;var a;e=null!==(a=_[r])&&void 0!==a?a:_[0];break}case"ArrowLeft":{const a=_.indexOf(t.currentTarget)-1;var r;e=null!==(r=_[a])&&void 0!==r?r:_[_.length-1];break}}null==e||e.focus()};return r.createElement("div",{className:(0,n.Z)("tabs-container",s)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":l},f)},N.map((({value:t,label:e,attributes:a})=>r.createElement("li",m({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:t=>_.push(t),onKeyDown:C,onFocus:A,onClick:A},a,{className:(0,n.Z)("tabs__item",d,null==a?void 0:a.className,{"tabs__item--active":O===t})}),null!=e?e:t)))),a?(0,r.cloneElement)(g.filter((t=>t.props.value===O))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((t,e)=>(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==O})))))}function u(t){const e=(0,l.Z)();return r.createElement(c,m({key:String(e)},t))}}}]);