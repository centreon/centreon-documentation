"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[49142],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},95208:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>k,frontMatter:()=>s,metadata:()=>p,toc:()=>m});n(67294);var a=n(3905),r=n(67709),i=n(7626);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},l.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const s={id:"network-cisco-standard-snmp",title:"Cisco Standard"},c=void 0,p={unversionedId:"integrations/plugin-packs/procedures/network-cisco-standard-snmp",id:"integrations/plugin-packs/procedures/network-cisco-standard-snmp",title:"Cisco Standard",description:"Overview",source:"@site/pp/integrations/plugin-packs/procedures/network-cisco-standard-snmp.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/network-cisco-standard-snmp",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/network-cisco-standard-snmp",draft:!1,tags:[],version:"current",frontMatter:{id:"network-cisco-standard-snmp",title:"Cisco Standard"},sidebar:"pp",previous:{title:"Cisco Small Business",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/network-switchs-cisco-smallbusiness-standard-snmp"},next:{title:"Cisco Standard SSH",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/network-cisco-standard-ssh"}},u={},m=[{value:"Overview",id:"overview",level:2},{value:"Plugin-pack assets",id:"plugin-pack-assets",level:2},{value:"Monitored equipments",id:"monitored-equipments",level:3},{value:"Discovery rules",id:"discovery-rules",level:3},{value:"Collected metrics",id:"collected-metrics",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Cisco device configuration",id:"cisco-device-configuration",level:3},{value:"Network flow",id:"network-flow",level:3},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"FAQ",id:"faq",level:2},{value:"How do I test my configuration through the CLI and what do the main parameters stand for ?",id:"how-do-i-test-my-configuration-through-the-cli-and-what-do-the-main-parameters-stand-for-",level:3},{value:"UNKNOWN: SNMP GET Request : Timeout",id:"unknown-snmp-get-request--timeout",level:3},{value:"UNKNOWN: SNMP GET Request : Cant get a single value.",id:"unknown-snmp-get-request--cant-get-a-single-value",level:3}],d={toc:m};function k(e){var{components:t}=e,n=o(e,["components"]);return(0,a.kt)("wrapper",l({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",l({},{id:"overview"}),"Overview"),(0,a.kt)("p",null,"Cisco develops, manufactures and sells networking hardware, software, telecommunications equipment and other high-technology services and products"),(0,a.kt)("h2",l({},{id:"plugin-pack-assets"}),"Plugin-pack assets"),(0,a.kt)("h3",l({},{id:"monitored-equipments"}),"Monitored equipments"),(0,a.kt)("p",null,"All Cisco devices supporting standard MIBs can be monitored:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Routers"),(0,a.kt)("li",{parentName:"ul"},"Access Points"),(0,a.kt)("li",{parentName:"ul"},"Switchs"),(0,a.kt)("li",{parentName:"ul"},"...                     ")),(0,a.kt)("h3",l({},{id:"discovery-rules"}),"Discovery rules"),(0,a.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"Hosts",label:"Hosts",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Rule name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"App-Protocol-SNMP-HostDiscovery"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Discover your Cisco devices through a SNMP subnet scan"))))),(0,a.kt)(i.Z,{value:"Services",label:"Services",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Rule name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Net-Cisco-Standard-SNMP-Packet-Errors-Name"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Discover network interfaces and monitor errors and discards")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Net-Cisco-Standard-SNMP-Traffic-Name"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Discover network interfaces and monitor status and bandwidth utilization")))))),(0,a.kt)("h2",l({},{id:"collected-metrics"}),"Collected metrics"),(0,a.kt)("p",null,"Only standard metrics are described in this section. Be aware that a lot of other checks and metrics are available from Cisco additionnal MIBS. Here is a non-exhaustive list: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"hsrp: HSRP protocol state "),(0,a.kt)("li",{parentName:"ul"},"ipsectunnel: State of ipsec tunnels"),(0,a.kt)("li",{parentName:"ul"},"ipsla: IP SLA configuration and performances"),(0,a.kt)("li",{parentName:"ul"},"load: Load of your device cores"),(0,a.kt)("li",{parentName:"ul"},"memoryflash: Memory flash pool usage"),(0,a.kt)("li",{parentName:"ul"},"qosusage: Check QOS configuration and associated consumptions"),(0,a.kt)("li",{parentName:"ul"},"stack: Check the health of your device stack")),(0,a.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"cpu",label:"cpu",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"cpu.utilization.5s.percentage"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"CPU utilization for the last 5 seconds. Unit: %")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"cpu.utilization.1m.percentage"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"CPU utilization for the last minute. Unit: %")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"cpu.utilization.5m.percentage"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"CPU utilization for the last 5 minutes. Unit: %")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"core.cpu.utilization.5s.percentage"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Per core CPU utilization for the last 5 seconds. Unit: %")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"core.cpu.utilization.1m.percentage"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Per core CPU utilization for the last minute. Unit: %")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"core.cpu.utilization.5m.percentage"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Per core CPU utilization for the last 5 minutes. Unit: %"))))),(0,a.kt)(i.Z,{value:"Memory",label:"Memory",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"memory.usage.bytes"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Memory usage on the device. Unit: Bytes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"memory.usage.percentage"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Memory usage on the device. Unit: %"))))),(0,a.kt)(i.Z,{value:"Traffic",label:"Traffic",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"status"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Interface status")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"interface.traffic.","*",".bitspersecond"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"*","in/out. Incoming/outgoing traffic going through the interface. Units: B/s & %")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"interface.packets.","*",".errors.percentage"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"*","in/out. Incoming/outgoing errored packets going through an interface. Units: Count & %")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"interface.packets.","*",".discards.percentage"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"*","in/out. Incoming/outgoing discarded packets going through an interface. Units: Count & %")))),(0,a.kt)("p",null,"A regexp filter is available to target a specific interface identifier/ifName ","[",(0,a.kt)("inlineCode",{parentName:"p"},"--interface='^my-interface-name$' --name"),"]"," ")),(0,a.kt)(i.Z,{value:"Environment",label:"Environment",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"entPhysicalDescr"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"A text description of the physical device")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"ciscoEnvMonPresent"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Environment sensors of the physical device")))),(0,a.kt)("p",null,"Monitoring all hardware components of the device. It may include the following : fan, module, physical, psu, sensor, temperature, voltage, etc."),(0,a.kt)("p",null,"You can use --absent-problem if you want to alert when a component is absent/removed. You can also overload the default status using the --threshold-overload option. ")),(0,a.kt)(i.Z,{value:"Configuration",label:"Configuration",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"ccmHistoryRunningLastChanged"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"The value of sysUpTime when the running configuration was last changed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"ccmHistoryRunningLastSaved"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"The value of sysUpTime when the running configuration was last saved (written)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"ccmHistoryStartupLastChanged"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"The value of sysUpTime when the startup configuration was last written")))))),(0,a.kt)("h2",l({},{id:"prerequisites"}),"Prerequisites"),(0,a.kt)("h3",l({},{id:"cisco-device-configuration"}),"Cisco device configuration"),(0,a.kt)("p",null,"To use this pack, the SNMP service must be properly configured on your Cisco device. Cisco provides an official documentation to achieve this: ",(0,a.kt)("a",l({parentName:"p"},{href:"https://www.cisco.com/c/en/us/support/docs/ip/simple-network-management-protocol-snmp/7282-12.html"}),"https://www.cisco.com/c/en/us/support/docs/ip/simple-network-management-protocol-snmp/7282-12.html")),(0,a.kt)("p",null,"Here is an example: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Connect to your router and reach the configuration prompt:")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{}),"Router#configure terminal\nEnter configuration commands, one per line.  End with CNTL/Z.\nRouter(config)# \n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use this command to enable snmp-server and set a read-only community")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{}),"Router(config)#snmp-server community public RO \n")),(0,a.kt)("p",null,"In the example above, 'public' is your snmp community. You do now want to use it in production ;)  "),(0,a.kt)("h3",l({},{id:"network-flow"}),"Network flow"),(0,a.kt)("p",null,"Your centreon server must be able to reach the Cisco device over UDP/161 SNMP port."),(0,a.kt)("h2",l({},{id:"installation"}),"Installation"),(0,a.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the Cisco SNMP Centreon Plugin on every poller expected to monitor Cisco devices: ")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Network-Cisco-Standard-Snmp\n")),(0,a.kt)("ol",l({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"Install The 'Cisco-Standard-Snmp' Centreon Plugin-Pack from the \"Configuration > Plugin packs > Manager\" page"))),(0,a.kt)(i.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the Cisco SNMP Centreon Plugin on every poller expected to monitor Cisco devices:")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Network-Cisco-Standard-Snmp\n")),(0,a.kt)("ol",l({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"Install the Centreon Plugin-Pack RPM:")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"yum install centreon-pack-network-cisco-standard-snmp\n")),(0,a.kt)("ol",l({},{start:3}),(0,a.kt)("li",{parentName:"ol"},"Install The 'Cisco-Standard-Snmp' Centreon Plugin-Pack from the \"Configuration > Plugin packs > Manager\" page")))),(0,a.kt)("h2",l({},{id:"configuration"}),"Configuration"),(0,a.kt)("p",null,"When creating an host, fill the 'Snmp Community' and 'Snmp Version' fields to match the device configuration. "),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"When using SNMP v3, set extra parameters with SNMPEXTRAOPTIONS macro ")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Mandatory"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Name"),(0,a.kt)("th",l({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:"left"})),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"SNMPEXTRAOPTIONS"),(0,a.kt)("td",l({parentName:"tr"},{align:"left"}),"Configure your own SNMPv3 credentials combo")))),(0,a.kt)("h2",l({},{id:"faq"}),"FAQ"),(0,a.kt)("h3",l({},{id:"how-do-i-test-my-configuration-through-the-cli-and-what-do-the-main-parameters-stand-for-"}),"How do I test my configuration through the CLI and what do the main parameters stand for ?"),(0,a.kt)("p",null,"Once the Centreo plugin installed, you can test it logging with the centreon-engine user:"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_cisco_standard_snmp.pl \\\n    --plugin=network::cisco::standard::snmp::plugin \\\n    --mode=cpu \\\n    --hostname=10.30.2.114 \\\n    --snmp-version='2c' \\\n    --snmp-community='test/cisco' \\\n  --verbose \n")),(0,a.kt)("p",null,"The command above checks the CPU utilization of your Cisco box (",(0,a.kt)("inlineCode",{parentName:"p"},"--mode=cpu"),"). You must always define the IP address of the device (",(0,a.kt)("inlineCode",{parentName:"p"},"--hostname=10.30.2.114"),") as well as the SNMP versions and community (",(0,a.kt)("inlineCode",{parentName:"p"},"--snmp-version='2c' --snmp-community='test/cisco'"),") "),(0,a.kt)("p",null,"You can display all modes that come with the plugin with the command below: "),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_cisco_standard_snmp.pl \\\n    --plugin=network::cisco::standard::snmp::plugin \\\n    --list-mode\n")),(0,a.kt)("p",null,"You can display options of a specific mode by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"--help")," flag. Here is an example to display cpu mode parameters:"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_cisco_standard_snmp.pl \\\n    --plugin=network::cisco::standard::snmp::plugin \\\n    --mode=cpu \\\n    --help\n")),(0,a.kt)("h3",l({},{id:"unknown-snmp-get-request--timeout"}),"UNKNOWN: SNMP GET Request : Timeout"),(0,a.kt)("p",null,"This message generally means that you are not using the right snmp version or community. It could also indicate that a third-party device like a firewall is blocking the SNMP UDP/161 request."),(0,a.kt)("h3",l({},{id:"unknown-snmp-get-request--cant-get-a-single-value"}),"UNKNOWN: SNMP GET Request : Cant get a single value."),(0,a.kt)("p",null,"This error message often refers to the following issues: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the Cisco device doesn't support the MIB used by the plugin"),(0,a.kt)("li",{parentName:"ul"},"the targeted SNMP OID cannot be fetched because of insufficient privileges on the device")))}k.isMDXComponent=!0},7626:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const i="tabItem_Ymn6";function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},l.apply(this,arguments)}function o({children:e,hidden:t,className:n}){return a.createElement("div",l({role:"tabpanel",className:(0,r.Z)(i,n)},{hidden:t}),e)}},67709:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(67294),r=n(86010),i=n(90980),l=n(35715),o=n(8854),s=n(8241);const c="tabList__CuJ",p="tabItem_LNqP";function u(){return u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},u.apply(this,arguments)}function m(e){var t;const{lazy:n,block:i,defaultValue:m,values:d,groupId:k,className:g}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=null!=d?d:f.map((({props:{value:e,label:t,attributes:n}})=>({value:e,label:t,attributes:n}))),N=(0,l.l)(h,((e,t)=>e.value===t.value));if(N.length>0)throw new Error(`Docusaurus error: Duplicate values "${N.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var v;const b=null===m?m:null!==(v=null!=m?m:null===(t=f.find((e=>e.props.default)))||void 0===t?void 0:t.props.value)&&void 0!==v?v:f[0].props.value;if(null!==b&&!h.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:w}=(0,o.U)(),[C,P]=(0,a.useState)(b),T=[],{blockElementScrollPositionUntilNextRender:O}=(0,s.o5)();if(null!=k){const e=y[k];null!=e&&e!==C&&h.some((t=>t.value===e))&&P(e)}const S=e=>{const t=e.currentTarget,n=T.indexOf(t),a=h[n].value;a!==C&&(O(t),P(a),null!=k&&w(k,String(a)))},I=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=T.indexOf(e.currentTarget)+1;var n;t=null!==(n=T[a])&&void 0!==n?n:T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;var a;t=null!==(a=T[n])&&void 0!==a?a:T[T.length-1];break}}null==t||t.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},g)},h.map((({value:e,label:t,attributes:n})=>a.createElement("li",u({role:"tab",tabIndex:C===e?0:-1,"aria-selected":C===e,key:e,ref:e=>T.push(e),onKeyDown:I,onFocus:S,onClick:S},n,{className:(0,r.Z)("tabs__item",p,null==n?void 0:n.className,{"tabs__item--active":C===e})}),null!=t?t:e)))),n?(0,a.cloneElement)(f.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function d(e){const t=(0,i.Z)();return a.createElement(m,u({key:String(t)},e))}}}]);