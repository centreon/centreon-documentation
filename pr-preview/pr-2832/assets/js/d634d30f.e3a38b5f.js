"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[71764],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,k=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},54057:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>k,frontMatter:()=>s,metadata:()=>c,toc:()=>m});n(67294);var r=n(3905),a=n(67709),o=n(7626);function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={id:"network-ruckus-zonedirector-snmp",title:"Ruckus Zonedirector"},u=void 0,c={unversionedId:"integrations/plugin-packs/procedures/network-ruckus-zonedirector-snmp",id:"integrations/plugin-packs/procedures/network-ruckus-zonedirector-snmp",title:"Ruckus Zonedirector",description:"Overview",source:"@site/pp/integrations/plugin-packs/procedures/network-ruckus-zonedirector-snmp.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/network-ruckus-zonedirector-snmp",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/network-ruckus-zonedirector-snmp",draft:!1,tags:[],version:"current",frontMatter:{id:"network-ruckus-zonedirector-snmp",title:"Ruckus Zonedirector"},sidebar:"pp",previous:{title:"Ruckus",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/network-ruckus-snmp"},next:{title:"Ruckus ICX",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/network-ruckus-icx-snmp"}},p={},m=[{value:"Overview",id:"overview",level:2},{value:"Plugin-Pack assets",id:"plugin-pack-assets",level:2},{value:"Monitored objects",id:"monitored-objects",level:3},{value:"Discovery rules",id:"discovery-rules",level:3},{value:"Monitored metrics",id:"monitored-metrics",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Ruckus device configuration",id:"ruckus-device-configuration",level:3},{value:"Network flow",id:"network-flow",level:3},{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"FAQ",id:"faq",level:2},{value:"How do I test my configuration through the CLI and what do the main parameters stand for ?",id:"how-do-i-test-my-configuration-through-the-cli-and-what-do-the-main-parameters-stand-for-",level:3},{value:"UNKNOWN: SNMP GET Request : Timeout",id:"unknown-snmp-get-request--timeout",level:3},{value:"UNKNOWN: SNMP GET Request : Cant get a single value.",id:"unknown-snmp-get-request--cant-get-a-single-value",level:3}],d={toc:m};function k(e){var{components:t}=e,n=l(e,["components"]);return(0,r.kt)("wrapper",i({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",i({},{id:"overview"}),"Overview"),(0,r.kt)("p",null,"Ruckus Wireless ZoneDirector is RUCKUS\u2019 centrally managed Smart Wireless LAN (WLAN) system developed specifically for small-to-medium enterprises (SMEs)."),(0,r.kt)("h2",i({},{id:"plugin-pack-assets"}),"Plugin-Pack assets"),(0,r.kt)("h3",i({},{id:"monitored-objects"}),"Monitored objects"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ruckus Access Point"),(0,r.kt)("li",{parentName:"ul"},"Ruckus Controllers")),(0,r.kt)("h3",i({},{id:"discovery-rules"}),"Discovery rules"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Rule name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Net-Ruckus-Zonedirector-SNMP-Ap-Name"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Discover access point attached to your controller")))),(0,r.kt)("h3",i({},{id:"monitored-metrics"}),"Monitored metrics"),(0,r.kt)(a.Z,{groupId:"sync",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Access-Point",label:"Access-Point",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"zd_connection_status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"The connection status with Zonedirector controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"accesspoint.cpu.utilization.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Cpu utilization by AP. Unit: %")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"accesspoint.memory.usage.bytes"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Memory used by AP. Unit: Bytes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"accesspoint.memory.free.bytes"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Memory free by AP. Unit: Bytes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"accesspoint.memory.usage.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Memory used by AP. Unit: %")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"accesspoint.connection.accesspoints"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of APs. Unit: Count")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"accesspoint.connection.client.devices.authorized.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Total number of authenticated terminal which is using currently on this AP. Unit: Count")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"accesspoint.connection.rogue.devices.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of rogue devices. Unit: Count")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"accesspoint.traffic.in.bitspersecon"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Incoming traffic going through the access point. Unit: bits/second")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"accesspoint.traffic.out.bitspersecond"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Outgoing traffic going through the access point. Unit: bits/second"))))),(0,r.kt)(o.Z,{value:"System",label:"System",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system_status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"System status.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"peer_connected_status"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Peer connection status.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system.cpu.utilization.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Cpu utilization of the controller. Unit: %")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system.memory.usage.bytes"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Memory used by the controller. Unit: Bytes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system.memory.free.bytes"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Memory free of the controller. Unit: Bytes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system.memory.usage.percentage"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Memory used by the controller. Unit: %")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system.connection.accesspoints.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of APs. Unit: Count")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system.connection.client.devices.authorized.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of associated clients. Unit: Count")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system.connection.rogue.devices.count"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of rogue devices. Unit: Count")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system.traffic.in.bitspersecond"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Incoming traffic going through the system. Unit: bits/second")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"system.traffic.out.bitspersecond"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Outgoing traffic going through the system. Unit: bits/second")))))),(0,r.kt)("h2",i({},{id:"prerequisites"}),"Prerequisites"),(0,r.kt)("h3",i({},{id:"ruckus-device-configuration"}),"Ruckus device configuration"),(0,r.kt)("p",null,"To use this Plugin, the SNMP service must be properly configured on your Ruckus device. Ruckus provides an official documentation to achieve this: ",(0,r.kt)("a",i({parentName:"p"},{href:"http://docs.ruckuswireless.com/smartzone/3.6.1/sz100-vsze-administrator-guide/GUID-F08BF334-2116-47A5-900C-B6AA4FC5E62A"}),"http://docs.ruckuswireless.com/smartzone/3.6.1/sz100-vsze-administrator-guide/GUID-F08BF334-2116-47A5-900C-B6AA4FC5E62A")),(0,r.kt)("h3",i({},{id:"network-flow"}),"Network flow"),(0,r.kt)("p",null,"Your Centreon Poller must be able to reach the Ruckus device over UDP/161 SNMP port."),(0,r.kt)("h2",i({},{id:"setup"}),"Setup"),(0,r.kt)(a.Z,{groupId:"sync",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Poller expected to monitor Ruckus Zonedirector ressources:")),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Network-Ruckus-Zonedirector-Snmp\n")),(0,r.kt)("ol",i({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the 'Ruckus Zonedirector' Centreon Plugin-Pack on the \"Configuration > Plugin Packs > Manager\" page"))),(0,r.kt)(o.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Centreon poller expected to monitor Ruckus Zonedirector ressources:")),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Network-Ruckus-Zonedirector-Snmp\n")),(0,r.kt)("ol",i({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"Install the Centreon Plugin-Pack RPM on the Centreon Central server:")),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-pack-network-ruckus-zonedirector-snmp.noarch\n")),(0,r.kt)("ol",i({},{start:3}),(0,r.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the 'Ruckus Zonedirector' Centreon Plugin-Pack on the \"Configuration > Plugin Packs > Manager\" page")))),(0,r.kt)("h2",i({},{id:"configuration"}),"Configuration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Log into Centreon and add a new Host through "Configuration > Hosts".'),(0,r.kt)("li",{parentName:"ul"},"Apply the template \"Net-Ruckus-Zonedirector-SNMP-custom\" and configure the 'SNMP Community' and 'SNMP Version' fields to match the device configuration.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"When using SNMP v3, set extra parameters with SNMPEXTRAOPTIONS macro :")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Mandatory"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Nom"),(0,r.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:"left"})),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"SNMPEXTRAOPTIONS"),(0,r.kt)("td",i({parentName:"tr"},{align:"left"}),"Any extra option you may want to add to the command (eg. a --verbose flag)")))),(0,r.kt)("h2",i({},{id:"faq"}),"FAQ"),(0,r.kt)("h3",i({},{id:"how-do-i-test-my-configuration-through-the-cli-and-what-do-the-main-parameters-stand-for-"}),"How do I test my configuration through the CLI and what do the main parameters stand for ?"),(0,r.kt)("p",null,"Once the Centreon Plugin installed, you can test it logging with the centreon-engine user:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_ruckus_zonedirector_snmp.pl \\\n    --plugin=network::ruckus::zonedirector::snmp::plugin \\\n    --mode=system \\\n    --hostname=ruckus.int.centreon.com \\\n    --snmp-version='2c' \\\n    --snmp-community='ruckus_zonedirector' \\\n        --verbose \n")),(0,r.kt)("p",null,"The command above checks the system utilization on your Ruckus box (",(0,r.kt)("inlineCode",{parentName:"p"},"--mode=system"),"). You must always define the IP address/FQDN of the device (",(0,r.kt)("inlineCode",{parentName:"p"},"--hostname=ruckus.int.centreon.com"),") as well as the SNMP versions and community (",(0,r.kt)("inlineCode",{parentName:"p"},"--snmp-version='2c' --snmp-community='ruckus_zonedirector'"),") "),(0,r.kt)("p",null,"You can display all modes that come with the Plugin with the command below: "),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_ruckus_zonedirector_snmp.pl \\\n    --plugin=network::ruckus::zonedirector::snmp::plugin \\\n    --list-mode\n")),(0,r.kt)("p",null,"You can display options of a specific mode by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--help")," flag. Here is an example to display system mode parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_ruckus_zonedirector_snmp.pl \\\n    --plugin=network::ruckus::zonedirector::snmp::plugin \\\n    --mode=system \\\n    --help\n")),(0,r.kt)("h3",i({},{id:"unknown-snmp-get-request--timeout"}),"UNKNOWN: SNMP GET Request : Timeout"),(0,r.kt)("p",null,"This message generally means that you are not using the right SNMP version or community. It could also indicate that a third-party device like a firewall is blocking the SNMP UDP/161 request."),(0,r.kt)("h3",i({},{id:"unknown-snmp-get-request--cant-get-a-single-value"}),"UNKNOWN: SNMP GET Request : Cant get a single value."),(0,r.kt)("p",null,"This error message often refers to the following issues: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the Ruckus device doesn't support the MIB used by the plugin"),(0,r.kt)("li",{parentName:"ul"},"the targeted SNMP OID cannot be fetched because of insufficient privileges on the device. SNMP Agent must be capable of accessing to the enterprise branch Ruckus : .1.3.6.1.4.1.25053.")))}k.isMDXComponent=!0},7626:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294),a=n(86010);const o="tabItem_Ymn6";function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function l({children:e,hidden:t,className:n}){return r.createElement("div",i({role:"tabpanel",className:(0,a.Z)(o,n)},{hidden:t}),e)}},67709:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(67294),a=n(86010),o=n(90980),i=n(35715),l=n(8854),s=n(8241);const u="tabList__CuJ",c="tabItem_LNqP";function p(){return p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},p.apply(this,arguments)}function m(e){var t;const{lazy:n,block:o,defaultValue:m,values:d,groupId:k,className:g}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=null!=d?d:f.map((({props:{value:e,label:t,attributes:n}})=>({value:e,label:t,attributes:n}))),y=(0,i.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var b;const N=null===m?m:null!==(b=null!=m?m:null===(t=f.find((e=>e.props.default)))||void 0===t?void 0:t.props.value)&&void 0!==b?b:f[0].props.value;if(null!==N&&!h.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:w}=(0,l.U)(),[P,O]=(0,r.useState)(N),C=[],{blockElementScrollPositionUntilNextRender:T}=(0,s.o5)();if(null!=k){const e=v[k];null!=e&&e!==P&&h.some((t=>t.value===e))&&O(e)}const M=e=>{const t=e.currentTarget,n=C.indexOf(t),r=h[n].value;r!==P&&(T(t),O(r),null!=k&&w(k,String(r)))},S=e=>{let t=null;switch(e.key){case"ArrowRight":{const r=C.indexOf(e.currentTarget)+1;var n;t=null!==(n=C[r])&&void 0!==n?n:C[0];break}case"ArrowLeft":{const n=C.indexOf(e.currentTarget)-1;var r;t=null!==(r=C[n])&&void 0!==r?r:C[C.length-1];break}}null==t||t.focus()};return r.createElement("div",{className:(0,a.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":o},g)},h.map((({value:e,label:t,attributes:n})=>r.createElement("li",p({role:"tab",tabIndex:P===e?0:-1,"aria-selected":P===e,key:e,ref:e=>C.push(e),onKeyDown:S,onFocus:M,onClick:M},n,{className:(0,a.Z)("tabs__item",c,null==n?void 0:n.className,{"tabs__item--active":P===e})}),null!=t?t:e)))),n?(0,r.cloneElement)(f.filter((e=>e.props.value===P))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==P})))))}function d(e){const t=(0,o.Z)();return r.createElement(m,p({key:String(t)},e))}}}]);