"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[60101],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>c});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),p=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),u=p(a),c=r,k=u["".concat(s,".").concat(c)]||u[c]||d[c]||l;return a?n.createElement(k,i(i({ref:e},m),{},{components:a})):n.createElement(k,i({ref:e},m))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},54589:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>p,default:()=>k,frontMatter:()=>s,metadata:()=>m,toc:()=>u});a(67294);var n=a(3905),r=a(67709),l=a(7626);function i(){return i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},i.apply(this,arguments)}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}const s={id:"applications-bluemind-ssh",title:"BlueMind SSH"},p=void 0,m={unversionedId:"integrations/plugin-packs/procedures/applications-bluemind-ssh",id:"integrations/plugin-packs/procedures/applications-bluemind-ssh",title:"BlueMind SSH",description:"Overview",source:"@site/pp/integrations/plugin-packs/procedures/applications-bluemind-ssh.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/applications-bluemind-ssh",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/applications-bluemind-ssh",draft:!1,tags:[],version:"current",frontMatter:{id:"applications-bluemind-ssh",title:"BlueMind SSH"},sidebar:"pp",previous:{title:"Bind9 Web",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/applications-bind9-web"},next:{title:"Cassandra",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/applications-databases-cassandra-jmx"}},d={},u=[{value:"Overview",id:"overview",level:2},{value:"Plugin-Pack Assets",id:"plugin-pack-assets",level:2},{value:"Monitored Objects",id:"monitored-objects",level:3},{value:"Monitored Metrics",id:"monitored-metrics",level:2},{value:"Prerequisistes",id:"prerequisistes",level:2},{value:"BlueMind Configuration",id:"bluemind-configuration",level:3},{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"sshcli backend",id:"sshcli-backend",level:3},{value:"plink backend",id:"plink-backend",level:3},{value:"libssh backend",id:"libssh-backend",level:3},{value:"FAQ",id:"faq",level:2},{value:"I have that error message: <code>UNKNOWN: Command error: Host key verification failed.</code>. What does it mean ?",id:"i-have-that-error-message-unknown-command-error-host-key-verification-failed-what-does-it-mean-",level:3}],c={toc:u};function k(t){var{components:e}=t,a=o(t,["components"]);return(0,n.kt)("wrapper",i({},c,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",i({},{id:"overview"}),"Overview"),(0,n.kt)("p",null,"BlueMind is a complete unified enterprise messaging and communications solution."),(0,n.kt)("h2",i({},{id:"plugin-pack-assets"}),"Plugin-Pack Assets"),(0,n.kt)("h3",i({},{id:"monitored-objects"}),"Monitored Objects"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Core: Main BlueMind engine"),(0,n.kt)("li",{parentName:"ul"},"Eas: Mobile connection service"),(0,n.kt)("li",{parentName:"ul"},"Hps: Authentication service"),(0,n.kt)("li",{parentName:"ul"},"Ips: IMAP operations tracking"),(0,n.kt)("li",{parentName:"ul"},"Lmtpd: Email delivery service"),(0,n.kt)("li",{parentName:"ul"},"Milter: Analysis and modification of emails at SMTP Level"),(0,n.kt)("li",{parentName:"ul"},"Webserver: Web application server"),(0,n.kt)("li",{parentName:"ul"},"Xmpp: Instant messaging service")),(0,n.kt)("h2",i({},{id:"monitored-metrics"}),"Monitored Metrics"),(0,n.kt)("p",null,"You can get an overview of all the metrics gathered from BlueMind in the official documentation: ",(0,n.kt)("a",i({parentName:"p"},{href:"https://forge.bluemind.net/confluence/display/BM35/Reference+des+metriques"}),"https://forge.bluemind.net/confluence/display/BM35/Reference+des+metriques")),(0,n.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"Core",label:"Core",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"core.calls.received.success.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Successful calls to the core. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"core.calls.received.failure.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Failure calls to the core. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"core.heartbeat.broadcast.running.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Broadcast routine running. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"core.directory.cluster.events.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Directory Cluster events. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"core.request.handling.total.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Total time Core spent to handle requests. Unit: ms")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"core.request.handling.mean.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Mean time Core spent to handle requests. Unit: ms"))))),(0,n.kt)(l.Z,{value:"Eas",label:"Eas",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"eas.responses.size.total.bytes"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Response size. Unit: Bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"eas.execution.total.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Total execution time. Unit: ms")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"eas.execution.mean.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Mean execution time. Unit: ms"))))),(0,n.kt)(l.Z,{value:"Hps",label:"Hps",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"hps.authentication.success.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"HPS Successful authentications. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"hps.authentication.failure.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"HPS Failed authentications. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"hps.requests.protected.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of protected page display. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"hps.requests.maintenance.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of maintenance page display. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"hps.upstream.requests.time.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By instances. e.g. /login /webmail ...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"hps.upstream.requests.time.mean.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By instances. e.g. /login /webmail ...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"hps.upstream.requests.size.total.bytes"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By instances. e.g. /login /webmail ...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"hps.upstream.requests.total.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By instances. e.g. /login /webmail ..."))))),(0,n.kt)(l.Z,{value:"Ips",label:"Ips",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"ips.connections.active.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"IPS active connections. Unit: Count"))))),(0,n.kt)(l.Z,{value:"Lmtpd",label:"Lmtpd",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"lmtpd.connections.active.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Active connections. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"lmtpd.connections.total.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Total connections. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"lmtpd.deliveries.success.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Connection success. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"lmtpd.deliveries.failure.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Connection failure. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"lmtpd.emails.size.total.bytes"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Total email size. Unit: Bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"lmtpd.sessions.duration.total.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Sessions total duration. Unit: ms")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"lmtpd.sessions.duration.mean.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Sessions mean duration. Unit: ms")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"lmtpd.traffic.transport.latency.total.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Transport total latency. Unit: ms")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"lmtpd.traffic.transport.latency.mean.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Transport mean latency. Unit: ms"))))),(0,n.kt)(l.Z,{value:"Milter",label:"Milter",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"milter.connections.total.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Total connections. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"milter.traffic.class.inbound.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Inbound email. Unit. Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"milter.traffic.class.outbound.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Outbound email. Unit. Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"milter.traffic.size.inbound.bytes"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Inbound email size. Unit: Bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"milter.traffic.size.outbound.bytes"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Outbound email size. Unit: Bytes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"milter.sessions.duration.total.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Sessions total duration. Unit: ms")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"milter.sessions.duration.mean.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Sessions mean duration. Unit: ms"))))),(0,n.kt)(l.Z,{value:"Webserver",label:"Webserver",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"webserver.requests.time.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Request handling time. Unit: ms")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"webserver.requests.time.mean.milliseconds"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Request handling mean time. Unit: ms")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"webserver.requests.total.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Total requested page page. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"webserver.requests.status.200.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Total 200/OK requests. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"webserver.requests.status.304.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Total 304/Not Modified. Unit: Count"))))),(0,n.kt)(l.Z,{value:"Xmpp",label:"Xmpp",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"xmpp.packets.all.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"XMPP packet number. Unit: Count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"xmpp.packets.chat.count"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"XMPP IM packet number. Unit: Count")))))),(0,n.kt)("h2",i({},{id:"prerequisistes"}),"Prerequisistes"),(0,n.kt)("h3",i({},{id:"bluemind-configuration"}),"BlueMind Configuration"),(0,n.kt)("p",null,"A monitoring account allowed to access unix sockets within ",(0,n.kt)("inlineCode",{parentName:"p"},"/var/run/bm-metrics/")," directory must be created on the BlueMind system  and be part of the ",(0,n.kt)("em",{parentName:"p"},"telegraph")," group."),(0,n.kt)("p",null,"You can check that the proper monitoring account permissions are set by logging on the BlueMind system using this newly created user and  executing this test command:"),(0,n.kt)("pre",null,(0,n.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"user$ curl --unix-socket /var/run/bm-metrics/metrics-bm-core.sock http://127.0.0.1/metrics\n")),(0,n.kt)("p",null,"The command should return some results such as below:"),(0,n.kt)("pre",null,(0,n.kt)("code",i({parentName:"pre"},{}),"bm-core.callsByRPC,rpc=GET-/api/todolist/{containerUid}/{uid}/_itemchangelog,status=success,meterType=Counter count=1\nbm-core.callsByRPC,rpc=GET-/api/externaluser/{domainUid}/{uid}/groups,status=success,meterType=Counter count=2\nbm-core.heartbeat.broadcast,state=core.state.stopping,meterType=Counter count=2\n...\n")),(0,n.kt)("h2",i({},{id:"setup"}),"Setup"),(0,n.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every poller expected to monitor BlueMind servers:")),(0,n.kt)("pre",null,(0,n.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Applications-Bluemind-Ssh\n")),(0,n.kt)("ol",i({},{start:2}),(0,n.kt)("li",{parentName:"ol"},'Install the monitoring templates from the Centreon Plugin-Pack on the "Configuration > Plugin packs > Manager" page'))),(0,n.kt)(l.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every poller expected to monitor BlueMind servers:")),(0,n.kt)("pre",null,(0,n.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Applications-Bluemind-Ssh\n")),(0,n.kt)("ol",i({},{start:2}),(0,n.kt)("li",{parentName:"ol"},"Install the Centreon Plugin-Pack RPM:")),(0,n.kt)("pre",null,(0,n.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-pack-applications-bluemind-ssh\n")),(0,n.kt)("ol",i({},{start:3}),(0,n.kt)("li",{parentName:"ol"},'Install the monitoring templates from the Centreon Plugin-Pack on the "Configuration > Plugin packs > Manager" page')))),(0,n.kt)("h2",i({},{id:"configuration"}),"Configuration"),(0,n.kt)("p",null,"Adding a new host into Centreon, apply the relevant host template matching your instance/cluster type. All of the host templates begin with ",(0,n.kt)("em",{parentName:"p"},"App-Bluemind-SSH"),". Once the template set, you have to set values according to the chosen SSH backend. "),(0,n.kt)("p",null,"3 SSH backends are available to connect to the BlueMind server: ",(0,n.kt)("em",{parentName:"p"},"sshcli"),", ",(0,n.kt)("em",{parentName:"p"},"plink")," and ",(0,n.kt)("em",{parentName:"p"},"libssh")," which are detailed below.  "),(0,n.kt)("h3",i({},{id:"sshcli-backend"}),"sshcli backend"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Mandatory"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"X"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHBACKEND"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Name of the backend: ",(0,n.kt)("inlineCode",{parentName:"td"},"sshcli"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHUSERNAME"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By default, it uses the user running process ",(0,n.kt)("inlineCode",{parentName:"td"},"centengine")," on your poller")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHPASSWORD"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Cannot be used with backend. Only ssh key authentication")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHPORT"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By default: 22")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHEXTRAOPTIONS"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Customize it with your own if needed. E.g.: ",(0,n.kt)("inlineCode",{parentName:"td"},"--ssh-priv-key=/user/.ssh/id_rsa"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Warning")," With that backend, you have to validate the target server fingerprint manually (with the SSHUSERNAME used)."),(0,n.kt)("h3",i({},{id:"plink-backend"}),"plink backend"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Mandatory"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"X"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHBACKEND"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Name of the backend: ",(0,n.kt)("inlineCode",{parentName:"td"},"plink"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHUSERNAME"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By default, it uses the user running process ",(0,n.kt)("inlineCode",{parentName:"td"},"centengine")," on your poller")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHPASSWORD"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Can be used. If not set, SSH key authentication is used")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHPORT"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By default: 22")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHEXTRAOPTIONS"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Customize it with your own if needed. E.g.: ",(0,n.kt)("inlineCode",{parentName:"td"},"--ssh-priv-key=/user/.ssh/id_rsa"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Warning")," With that backend, you have to validate the target server fingerprint manually (with the SSHUSERNAME used)."),(0,n.kt)("h3",i({},{id:"libssh-backend"}),"libssh backend"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Mandatory"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Name"),(0,n.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"X"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHBACKEND"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Name of the backend: ",(0,n.kt)("inlineCode",{parentName:"td"},"libssh"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHUSERNAME"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By default, it uses the user running process ",(0,n.kt)("inlineCode",{parentName:"td"},"centengine")," on your poller")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHPASSWORD"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Can be used. If not set, SSH key authentication is used")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHPORT"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"By default: 22")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",i({parentName:"tr"},{align:"left"})),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"SSHEXTRAOPTIONS"),(0,n.kt)("td",i({parentName:"tr"},{align:"left"}),"Customize it with your own if needed. E.g.: ",(0,n.kt)("inlineCode",{parentName:"td"},"--ssh-priv-key=/user/.ssh/id_rsa"))))),(0,n.kt)("p",null,"With that backend, you don't have to validate the target server fingerprint manually. Nice ;)"),(0,n.kt)("h2",i({},{id:"faq"}),"FAQ"),(0,n.kt)("h3",i({},{id:"i-have-that-error-message-unknown-command-error-host-key-verification-failed-what-does-it-mean-"}),"I have that error message: ",(0,n.kt)("inlineCode",{parentName:"h3"},"UNKNOWN: Command error: Host key verification failed."),". What does it mean ?"),(0,n.kt)("p",null,"It means you haven't manually validated the target server fingerprint with ",(0,n.kt)("inlineCode",{parentName:"p"},"ssh")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"plink")," on the Centreon poller."))}k.isMDXComponent=!0},7626:(t,e,a)=>{a.d(e,{Z:()=>o});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function i(){return i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},i.apply(this,arguments)}function o({children:t,hidden:e,className:a}){return n.createElement("div",i({role:"tabpanel",className:(0,r.Z)(l,a)},{hidden:e}),t)}},67709:(t,e,a)=>{a.d(e,{Z:()=>c});var n=a(67294),r=a(86010),l=a(90980),i=a(35715),o=a(8854),s=a(8241);const p="tabList__CuJ",m="tabItem_LNqP";function d(){return d=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},d.apply(this,arguments)}function u(t){var e;const{lazy:a,block:l,defaultValue:u,values:c,groupId:k,className:f}=t,N=n.Children.map(t.children,(t=>{if((0,n.isValidElement)(t)&&"value"in t.props)return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=null!=c?c:N.map((({props:{value:t,label:e,attributes:a}})=>({value:t,label:e,attributes:a}))),b=(0,i.l)(g,((t,e)=>t.value===e.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var h;const y=null===u?u:null!==(h=null!=u?u:null===(e=N.find((t=>t.props.default)))||void 0===e?void 0:e.props.value)&&void 0!==h?h:N[0].props.value;if(null!==y&&!g.some((t=>t.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${g.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:S}=(0,o.U)(),[C,O]=(0,n.useState)(y),w=[],{blockElementScrollPositionUntilNextRender:T}=(0,s.o5)();if(null!=k){const t=v[k];null!=t&&t!==C&&g.some((e=>e.value===t))&&O(t)}const M=t=>{const e=t.currentTarget,a=w.indexOf(e),n=g[a].value;n!==C&&(T(e),O(n),null!=k&&S(k,String(n)))},P=t=>{let e=null;switch(t.key){case"ArrowRight":{const n=w.indexOf(t.currentTarget)+1;var a;e=null!==(a=w[n])&&void 0!==a?a:w[0];break}case"ArrowLeft":{const a=w.indexOf(t.currentTarget)-1;var n;e=null!==(n=w[a])&&void 0!==n?n:w[w.length-1];break}}null==e||e.focus()};return n.createElement("div",{className:(0,r.Z)("tabs-container",p)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},f)},g.map((({value:t,label:e,attributes:a})=>n.createElement("li",d({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:t=>w.push(t),onKeyDown:P,onFocus:M,onClick:M},a,{className:(0,r.Z)("tabs__item",m,null==a?void 0:a.className,{"tabs__item--active":C===t})}),null!=e?e:t)))),a?(0,n.cloneElement)(N.filter((t=>t.props.value===C))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},N.map(((t,e)=>(0,n.cloneElement)(t,{key:e,hidden:t.props.value!==C})))))}function c(t){const e=(0,l.Z)();return n.createElement(u,d({key:String(e)},t))}}}]);