"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[47836],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(a),d=r,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||l;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},75688:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>k,frontMatter:()=>p,metadata:()=>c,toc:()=>m});a(67294);var n=a(3905),r=a(67709),l=a(7626);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},o.apply(this,arguments)}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const p={id:"blockchain-parity-restapi",title:"Parity API"},s=void 0,c={unversionedId:"integrations/plugin-packs/procedures/blockchain-parity-restapi",id:"integrations/plugin-packs/procedures/blockchain-parity-restapi",title:"Parity API",description:"Overview",source:"@site/pp/integrations/plugin-packs/procedures/blockchain-parity-restapi.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/blockchain-parity-restapi",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/blockchain-parity-restapi",draft:!1,tags:[],version:"current",frontMatter:{id:"blockchain-parity-restapi",title:"Parity API"},sidebar:"pp",previous:{title:"Hyperledger API",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/blockchain-hyperledger-exporter"},next:{title:"Parity Ethpoller API",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/blockchain-parity-ethpoller-restapi"}},u={},m=[{value:"Overview",id:"overview",level:2},{value:"Pack assets",id:"pack-assets",level:2},{value:"Monitored objects",id:"monitored-objects",level:3},{value:"Collected metrics &amp; status",id:"collected-metrics--status",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Host configuration",id:"host-configuration",level:2},{value:"How to check in the CLI that the configuration is OK and what are the main options for ?",id:"how-to-check-in-the-cli-that-the-configuration-is-ok-and-what-are-the-main-options-for-",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"UNKNOWN: Can&#39;t connect to ...",id:"unknown-cant-connect-to-",level:3},{value:"UNKNOWN: Cannot decode json response",id:"unknown-cannot-decode-json-response",level:3}],d={toc:m};function k(e){var{components:t}=e,a=i(e,["components"]);return(0,n.kt)("wrapper",o({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",o({},{id:"overview"}),"Overview"),(0,n.kt)("p",null,"Parity Blockchain is a fork of the Ethereum Blockchain. "),(0,n.kt)("p",null,"The Centreon Plugin Pack ",(0,n.kt)("em",{parentName:"p"},"Parity API")," aims to get information and metrics from the\nParity API. "),(0,n.kt)("h2",o({},{id:"pack-assets"}),"Pack assets"),(0,n.kt)("h3",o({},{id:"monitored-objects"}),"Monitored objects"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Blockchain Parity nodes",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Parity"),(0,n.kt)("li",{parentName:"ul"},"Info"),(0,n.kt)("li",{parentName:"ul"},"Eth"),(0,n.kt)("li",{parentName:"ul"},"Net")))),(0,n.kt)("h3",o({},{id:"collected-metrics--status"}),"Collected metrics & status"),(0,n.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"Parity",label:"Parity",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"),(0,n.kt)("th",o({parentName:"tr"},{align:null}),"Unit"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.pending.transactions"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Number of pending transactions"),(0,n.kt)("td",o({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.mempol.usage"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Memory pool usage"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"B")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.mempol.size"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Memory pool size"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"B")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.peers.connected"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Number of connected peers"),(0,n.kt)("td",o({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.peers.max"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Maximum number of peers"),(0,n.kt)("td",o({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.peers.usage"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Peers usage expressed in percent"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"%"))))),(0,n.kt)(l.Z,{value:"Eth",label:"Eth",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.eth.sync.status"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"State of node synchronization")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.eth.block.gas"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Gas")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.eth.block.usage"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Block Usage")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.eth.block.size"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Size of Block")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.eth.block.transactions.number"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Number of block transactions")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.eth.block.uncles"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Number of block uncles")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.eth.gas.limit"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Maximum Gas available")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.eth.gas.price"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Gas price")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.eth.gas.used"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Gas consumption"))))),(0,n.kt)(l.Z,{value:"Net",label:"Net",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,n.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"parity.network.peers.count"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Number of known peers")))))),(0,n.kt)("h2",o({},{id:"prerequisites"}),"Prerequisites"),(0,n.kt)("p",null,"To get data from the API, the Poller must be able to communicate with it over the\nconfigured port (default: 8545). "),(0,n.kt)("h2",o({},{id:"setup"}),"Setup"),(0,n.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Centreon Poller expected to monitor\nParity network nodes:")),(0,n.kt)("pre",null,(0,n.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Blockchain-Parity-Restapi\n")),(0,n.kt)("ol",o({},{start:2}),(0,n.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,n.kt)("em",{parentName:"li"},"Parity API"),' Centreon Plugin-Pack on\nthe "Configuration > Plugin Packs" page'))),(0,n.kt)(l.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Centreon Poller expected to monitor\nBlockchain Parity nodes:")),(0,n.kt)("pre",null,(0,n.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Blockchain-Parity-Restapi\n")),(0,n.kt)("ol",o({},{start:2}),(0,n.kt)("li",{parentName:"ol"},"Install the ",(0,n.kt)("em",{parentName:"li"},"Parity API")," Centreon Plugin-Pack RPM on the Centreon Central server:")),(0,n.kt)("pre",null,(0,n.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yum install centreon-pack-blockchain-parity-restapi\n")),(0,n.kt)("ol",o({},{start:3}),(0,n.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,n.kt)("em",{parentName:"li"},"Parity API"),' Centreon Plugin-Pack on\nthe "Configuration > Plugin Packs" page')))),(0,n.kt)("h2",o({},{id:"host-configuration"}),"Host configuration"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Log into Centreon and add a new Host through "Configuration > Hosts".'),(0,n.kt)("li",{parentName:"ul"},'Fill the "Name", "Alias" & "IP Address / DNS" fields according to your Blockchain\nParity Server settings'),(0,n.kt)("li",{parentName:"ul"},"Apply the ",(0,n.kt)("em",{parentName:"li"},"Blockchain-Parity-Restapi-custom")," template and configure all the\nmandatory Macros:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",o({parentName:"tr"},{align:"left"}),"Mandatory"),(0,n.kt)("th",o({parentName:"tr"},{align:"left"}),"Name"),(0,n.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"})),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"PARITYAPIPORT"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"(Default: '8545')")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"})),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"PARITYPROTO"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"(Default: 'http')")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"})),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"PARITYAPIURLPATH"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"(Default: '/')")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"})),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"TIMEOUT"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:"left"})),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"PARITYEXTRAOPTIONS"),(0,n.kt)("td",o({parentName:"tr"},{align:"left"}),"Any extra option you may want to add to every command_line (eg. a --verbose flag)")))),(0,n.kt)("h2",o({},{id:"how-to-check-in-the-cli-that-the-configuration-is-ok-and-what-are-the-main-options-for-"}),"How to check in the CLI that the configuration is OK and what are the main options for ?"),(0,n.kt)("p",null,"Once the plugin installed, log into your Centreon Poller CLI using the\n",(0,n.kt)("em",{parentName:"p"},"centreon-engine")," user account and test the Plugin by running the following\ncommand:"),(0,n.kt)("pre",null,(0,n.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_blockchain_parity_api.pl  \\ \n   --plugin=blockchain::parity::restapi::plugin  \\ \n   --mode=net  \\ \n   --hostname=10.0.0.1  \\ \n   --port=8545  \\ \n   --proto=http \\\n   --timeout=10  \\ \n   --proto=http  \\ \n   --api-path=/  \\ \n   --warning-peers=''  \\ \n   --critical-peers='1:'   \n")),(0,n.kt)("p",null,"Expected command output is shown below:"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"OK: Parity network module: connected peers: 2")),(0,n.kt)("p",null,"This command would trigger a WARNING alarm if the number of peers is reported as (--warning-peers) and a CRITICAL alarm if less than 1 (",(0,n.kt)("inlineCode",{parentName:"p"},"--critical-peers=1:"),")."),(0,n.kt)("p",null,"All the available options for a given mode can be displayed by adding the ",(0,n.kt)("inlineCode",{parentName:"p"},"--help")," parameter to the command:"),(0,n.kt)("pre",null,(0,n.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_blockchain_parity_api.pl  \\ \n    --plugin=blockchain::parity::restapi::plugin  \\ \n    --mode=net  \\ \n    --help\n")),(0,n.kt)("h2",o({},{id:"troubleshooting"}),"Troubleshooting"),(0,n.kt)("h3",o({},{id:"unknown-cant-connect-to-"}),"UNKNOWN: Can't connect to ..."),(0,n.kt)("p",null,"This error message means that the Centreon Plugin couldn't successfully connect to the Parity API. Check that no third party\ndevice (such as a firewall) is blocking the request. "),(0,n.kt)("h3",o({},{id:"unknown-cannot-decode-json-response"}),"UNKNOWN: Cannot decode json response"),(0,n.kt)("p",null,"This error message means that the Centreon Plugin couldn't successfully connect to the Parity API. Check that no third party\ndevice (such as a firewall) is blocking the request. "),(0,n.kt)("p",null,"A proxy connection may also be necessary to connect to the API.\nThis can be done by using this option in the command: ",(0,n.kt)("inlineCode",{parentName:"p"},"--proxyurl='http://proxy.mycompany:8080'"),"."))}k.isMDXComponent=!0},7626:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},o.apply(this,arguments)}function i({children:e,hidden:t,className:a}){return n.createElement("div",o({role:"tabpanel",className:(0,r.Z)(l,a)},{hidden:t}),e)}},67709:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(67294),r=a(86010),l=a(90980),o=a(35715),i=a(8854),p=a(8241);const s="tabList__CuJ",c="tabItem_LNqP";function u(){return u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},u.apply(this,arguments)}function m(e){var t;const{lazy:a,block:l,defaultValue:m,values:d,groupId:k,className:h}=e,g=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=null!=d?d:g.map((({props:{value:e,label:t,attributes:a}})=>({value:e,label:t,attributes:a}))),b=(0,o.l)(f,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var y;const N=null===m?m:null!==(y=null!=m?m:null===(t=g.find((e=>e.props.default)))||void 0===t?void 0:t.props.value)&&void 0!==y?y:g[0].props.value;if(null!==N&&!f.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:P}=(0,i.U)(),[O,w]=(0,n.useState)(N),T=[],{blockElementScrollPositionUntilNextRender:I}=(0,p.o5)();if(null!=k){const e=v[k];null!=e&&e!==O&&f.some((t=>t.value===e))&&w(e)}const C=e=>{const t=e.currentTarget,a=T.indexOf(t),n=f[a].value;n!==O&&(I(t),w(n),null!=k&&P(k,String(n)))},j=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;var a;t=null!==(a=T[n])&&void 0!==a?a:T[0];break}case"ArrowLeft":{const a=T.indexOf(e.currentTarget)-1;var n;t=null!==(n=T[a])&&void 0!==n?n:T[T.length-1];break}}null==t||t.focus()};return n.createElement("div",{className:(0,r.Z)("tabs-container",s)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},h)},f.map((({value:e,label:t,attributes:a})=>n.createElement("li",u({role:"tab",tabIndex:O===e?0:-1,"aria-selected":O===e,key:e,ref:e=>T.push(e),onKeyDown:j,onFocus:C,onClick:C},a,{className:(0,r.Z)("tabs__item",c,null==a?void 0:a.className,{"tabs__item--active":O===e})}),null!=t?t:e)))),a?(0,n.cloneElement)(g.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function d(e){const t=(0,l.Z)();return n.createElement(m,u({key:String(t)},e))}}}]);