"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[10245],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,k=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},57318:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>k,frontMatter:()=>c,metadata:()=>p,toc:()=>d});n(67294);var a=n(3905),r=n(67709),i=n(7626);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o.apply(this,arguments)}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const c={id:"cloud-cadvisor-api",title:"cAdvisor API"},s=void 0,p={unversionedId:"integrations/plugin-packs/procedures/cloud-cadvisor-api",id:"integrations/plugin-packs/procedures/cloud-cadvisor-api",title:"cAdvisor API",description:"Overview",source:"@site/pp/integrations/plugin-packs/procedures/cloud-cadvisor-api.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/cloud-cadvisor-api",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/cloud-cadvisor-api",draft:!1,tags:[],version:"current",frontMatter:{id:"cloud-cadvisor-api",title:"cAdvisor API"},sidebar:"pp",previous:{title:"cAdvisor",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/cloud-prometheus-cadvisor-api"},next:{title:"Cloud Foundry",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/cloud-cloudfoundry-api"}},u={},d=[{value:"Overview",id:"overview",level:2},{value:"Monitored objects",id:"monitored-objects",level:2},{value:"Discovery rules",id:"discovery-rules",level:3},{value:"Collected metrics",id:"collected-metrics",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"cAdvisor",id:"cadvisor",level:3},{value:"Network flow",id:"network-flow",level:3},{value:"Installation",id:"installation",level:2},{value:"Host configuration",id:"host-configuration",level:3},{value:"How to test my plugin and what do the main parameters stand for?",id:"how-to-test-my-plugin-and-what-do-the-main-parameters-stand-for",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"UNKNOWN: curl perform error : Timeout was reached",id:"unknown-curl-perform-error--timeout-was-reached",level:3},{value:"UNKNOWN: No containers found or no data available for this specific metric.",id:"unknown-no-containers-found-or-no-data-available-for-this-specific-metric",level:3}],m={toc:d};function k(e){var{components:t}=e,n=l(e,["components"]);return(0,a.kt)("wrapper",o({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",o({},{id:"overview"}),"Overview"),(0,a.kt)("p",null,"cAdvisor (Container Advisor) provides container users an understanding of the resource usage and\nperformance characteristics of their running containers. "),(0,a.kt)("p",null,"It is a running daemon that collects, aggregates, processes, and exports information about running containers."),(0,a.kt)("p",null,"This Pack aims to monitor metrics exposed through cAdvisor API endpoint. "),(0,a.kt)("h2",o({},{id:"monitored-objects"}),"Monitored objects"),(0,a.kt)("p",null,"This Pack contains one Host Template and several Service Templates to monitor node resource allocation\nand container performances: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Container-Usage"),(0,a.kt)("li",{parentName:"ul"},"Container-Disk-IO"),(0,a.kt)("li",{parentName:"ul"},"Container-Traffic"),(0,a.kt)("li",{parentName:"ul"},"Node-Status")),(0,a.kt)("h3",o({},{id:"discovery-rules"}),"Discovery rules"),(0,a.kt)("p",null,"The cAdvisor API Pack comes with several service discovery rules."),(0,a.kt)("p",null,"To monitor container metrics, you must launch a discovery to add relevant services:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",o({parentName:"tr"},{align:null}),"Rule"),(0,a.kt)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:null}),"Cloud-cAdvisor-API-Container-Disk-IO"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),"Discover containers and monitor Disk-IO metrics")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:null}),"Cloud-cAdvisor-API-Container-Usage"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),"Discover containers and monitor CPU & RAM consumption")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:null}),"Cloud-cAdvisor-API-Container-Traffic"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),"Discover containers and monitor bandwidth utilization")))),(0,a.kt)("h3",o({},{id:"collected-metrics"}),"Collected metrics"),(0,a.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"Container-Usage",label:"Container-Usage",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"),(0,a.kt)("th",o({parentName:"tr"},{align:"left"}),"Unit"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id>#container.cpu.count"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"Number of allocated CPU(s)"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"count")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id>#container.cpu.utilization.percentage"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"CPU utilization"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"%")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id>#container.cpu.user.utilization.percentage"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"CPU User utilization"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"%")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id>#container.cpu.system.utilization.percentage"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"CPU System utilization"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"%")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id>#container.memory.usage.bytes"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"Memory usage"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"B")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id>#container.memory.cache.usage.bytes"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"Cached memory usage"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"B")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id>#container.memory.rss.usage.bytes"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"RSS memory usage"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"B")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id>#container.swap.usage.bytes"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"SWAP memory usage"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"B")))),(0,a.kt)("p",null,"By default, the --use-name flag will instance the metric with the <container_name>.\nIf you want to use the <container_id> instead, remove it from the EXTRAOPTIONS macro at the Service Template level.")),(0,a.kt)(i.Z,{value:"Container-Disk-IO",label:"Container-Disk-IO",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"),(0,a.kt)("th",o({parentName:"tr"},{align:"left"}),"Unit"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id:device>#disk.io.read.bytespersecond"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"Disk I/O Read from the container"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"B/s")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id:device>#disk.io.write.bytespersecond"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"Disk I/O Read from the container"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"B/s")))),(0,a.kt)("p",null,"By default, the --use-name flag will instance the metric with the <container_name>.\nIf you want to use the <container_id> instead, remove it from the EXTRAOPTIONS macro at the Service Template level.")),(0,a.kt)(i.Z,{value:"Container-Traffic",label:"Container-Traffic",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",o({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",o({parentName:"tr"},{align:"left"}),"Description"),(0,a.kt)("th",o({parentName:"tr"},{align:"left"}),"Unit"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id.network_int>#container.traffic.in.bitspersecond"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"Container incoming traffic"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"bps")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"<container_name_or_id.network_int>#container.traffic.out.bitspersecond"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"Container outgoing traffic"),(0,a.kt)("td",o({parentName:"tr"},{align:"left"}),"bps")))),(0,a.kt)("p",null,"By default, the --use-name flag will instance the metric with the <container_name>.\nIf you want to use the <container_id> instead, remove it from the EXTRAOPTIONS macro at the Service Template level."))),(0,a.kt)("h2",o({},{id:"prerequisites"}),"Prerequisites"),(0,a.kt)("h3",o({},{id:"cadvisor"}),"cAdvisor"),(0,a.kt)("p",null,"A running cAdvisor container should be available. You can refer to the official\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://github.com/google/cadvisor#quick-start-running-cadvisor-in-a-docker-container"}),"quick start"),"."),(0,a.kt)("h3",o({},{id:"network-flow"}),"Network flow"),(0,a.kt)("p",null,"The Poller should be able to reach the cAdvisor Host over the TCP/8080 port. Note that the port\nmay be different on your setup. "),(0,a.kt)("h2",o({},{id:"installation"}),"Installation"),(0,a.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Centreon Poller expected to monitor containers with cAdvisor:")),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Cloud-cAdvisor-Api\n")),(0,a.kt)("ol",o({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,a.kt)("em",{parentName:"li"},"cAdvisor API")," Plugin Pack through the ",(0,a.kt)("inlineCode",{parentName:"li"},"Configuration > Plugin Packs > Manager")," page."))),(0,a.kt)(i.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Centreon Poller expected to monitor containers with cAdvisor:")),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Cloud-cAdvisor-Api\n")),(0,a.kt)("ol",o({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"Install the Centreon Plugin Pack RPM on the Centreon Central server:")),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yum install centreon-pack-cloud-cadvisor-api\n")),(0,a.kt)("ol",o({},{start:3}),(0,a.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,a.kt)("em",{parentName:"li"},"cAdvisor API")," Plugin Pack through the ",(0,a.kt)("inlineCode",{parentName:"li"},"Configuration > Plugin Packs > Manager")," page.")))),(0,a.kt)("h3",o({},{id:"host-configuration"}),"Host configuration"),(0,a.kt)("p",null,"Add a host from the ",(0,a.kt)("inlineCode",{parentName:"p"},"Configuration > Hosts")," menu and select the ",(0,a.kt)("inlineCode",{parentName:"p"},"Cloud-cAdvisor-API")," template. "),(0,a.kt)("p",null,"Here is a quick description of available configuration Macros: "),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",o({parentName:"tr"},{align:null}),"Mandatory"),(0,a.kt)("th",o({parentName:"tr"},{align:null}),"Macro"),(0,a.kt)("th",o({parentName:"tr"},{align:null}),"Description"),(0,a.kt)("th",o({parentName:"tr"},{align:null}),"Default value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:null}),"x"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"CADVISORAPIPROTO")),(0,a.kt)("td",o({parentName:"tr"},{align:null}),"Protocol used to talk with the cAdvisor API"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"http"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:null}),"x"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"CADVISORAPIPORT")),(0,a.kt)("td",o({parentName:"tr"},{align:null}),"Network port cAdvisor API listens over"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"8080"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:null}),"x"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"CADVISORAPIPATH")),(0,a.kt)("td",o({parentName:"tr"},{align:null}),"API Path to container metrics information"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"/containers/docker/"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:null})),(0,a.kt)("td",o({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"CADVISORAPIEXTRAOPTIONS")),(0,a.kt)("td",o({parentName:"tr"},{align:null}),"Extraoptions you may want to add to your command"),(0,a.kt)("td",o({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--http-backend=curl --insecure"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",o({parentName:"tr"},{align:null})),(0,a.kt)("td",o({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"PROXYURL")),(0,a.kt)("td",o({parentName:"tr"},{align:null}),"URL of a proxy to use to reach cAdvisor API"),(0,a.kt)("td",o({parentName:"tr"},{align:null}))))),(0,a.kt)("p",null,"Click on the ",(0,a.kt)("strong",{parentName:"p"},"Save")," button and you're good to push the configuration to\nthe Engines."),(0,a.kt)("h2",o({},{id:"how-to-test-my-plugin-and-what-do-the-main-parameters-stand-for"}),"How to test my plugin and what do the main parameters stand for?"),(0,a.kt)("p",null,"Once the plugin is installed, you can test it by logging into the CLI with the centreon-engine user."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_cadvisor_api.pl \\\n    --plugin=cloud::cadvisor::restapi::plugin --mode=traffic \\\n    --hostname=10.1.1.136 --port='8080' --proto='http' \\\n    --api-path='/containers/docker/' --http-backend=curl --insecure \\\n    --container-id='' --container-name='' --filter-name='^gray$' \\\n    --warning-traffic-in='' --critical-traffic-in='' \\\n    --warning-traffic-out='' --critical-traffic-out='' \\\n    --verbose --use-name\n")),(0,a.kt)("p",null,"Expected output is shown below: "),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"OK: Container 'gray.eth0' Traffic In: 43.99 b/s, Traffic Out: 39.92 b/s | 'gray.eth0#container.traffic.in.bitspersecond'=43.99b/s;;;0; 'gray.eth0#container.traffic.out.bitspersecond'=39.92b/s;;;0;\nContainer 'gray.eth0' Traffic In: 43.99 b/s, Traffic Out: 39.92 b/s\n")),(0,a.kt)("p",null,"The command above checks the incoming and outgoing traffic for a container (",(0,a.kt)("inlineCode",{parentName:"p"},"--plugin=cloud::cadvisor::restapi::plugin --mode=traffic"),").\nThe focus is on the gray (",(0,a.kt)("inlineCode",{parentName:"p"},"--filter-name='^gray$'"),") container and we use this name as the perfdata instance ",(0,a.kt)("inlineCode",{parentName:"p"},"--use-name"),". "),(0,a.kt)("p",null,"All available options for a given mode can be displayed by adding the ",(0,a.kt)("inlineCode",{parentName:"p"},"--help")," parameter to the command:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_cadvisor_api.pl \\\n    --plugin=cloud::cadvisor::restapi::plugin --mode=traffic \\\n    --help\n")),(0,a.kt)("h2",o({},{id:"troubleshooting"}),"Troubleshooting"),(0,a.kt)("h3",o({},{id:"unknown-curl-perform-error--timeout-was-reached"}),"UNKNOWN: curl perform error : Timeout was reached"),(0,a.kt)("p",null,"When this error occurs, check that you can reach the cAdvisor over the 8080/HTTP port. "),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"--debug")," flag to obtain additional information about the reason of the failure."),(0,a.kt)("p",null,"If a proxy is required, add its URL within the PROXYURL Macro at the Host level."),(0,a.kt)("h3",o({},{id:"unknown-no-containers-found-or-no-data-available-for-this-specific-metric"}),"UNKNOWN: No containers found or no data available for this specific metric."),(0,a.kt)("p",null,"This error means that no data is available for this specific metric or that the container name used in\nthe filter might be mispelled (this can't happen if you use the service discoveru feature)."))}k.isMDXComponent=!0},7626:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const i="tabItem_Ymn6";function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o.apply(this,arguments)}function l({children:e,hidden:t,className:n}){return a.createElement("div",o({role:"tabpanel",className:(0,r.Z)(i,n)},{hidden:t}),e)}},67709:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(67294),r=n(86010),i=n(90980),o=n(35715),l=n(8854),c=n(8241);const s="tabList__CuJ",p="tabItem_LNqP";function u(){return u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},u.apply(this,arguments)}function d(e){var t;const{lazy:n,block:i,defaultValue:d,values:m,groupId:k,className:f}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=null!=m?m:g.map((({props:{value:e,label:t,attributes:n}})=>({value:e,label:t,attributes:n}))),v=(0,o.l)(h,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var b;const N=null===d?d:null!==(b=null!=d?d:null===(t=g.find((e=>e.props.default)))||void 0===t?void 0:t.props.value)&&void 0!==b?b:g[0].props.value;if(null!==N&&!h.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:w}=(0,l.U)(),[O,C]=(0,a.useState)(N),P=[],{blockElementScrollPositionUntilNextRender:T}=(0,c.o5)();if(null!=k){const e=y[k];null!=e&&e!==O&&h.some((t=>t.value===e))&&C(e)}const A=e=>{const t=e.currentTarget,n=P.indexOf(t),a=h[n].value;a!==O&&(T(t),C(a),null!=k&&w(k,String(a)))},I=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=P.indexOf(e.currentTarget)+1;var n;t=null!==(n=P[a])&&void 0!==n?n:P[0];break}case"ArrowLeft":{const n=P.indexOf(e.currentTarget)-1;var a;t=null!==(a=P[n])&&void 0!==a?a:P[P.length-1];break}}null==t||t.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",s)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},f)},h.map((({value:e,label:t,attributes:n})=>a.createElement("li",u({role:"tab",tabIndex:O===e?0:-1,"aria-selected":O===e,key:e,ref:e=>P.push(e),onKeyDown:I,onFocus:A,onClick:A},n,{className:(0,r.Z)("tabs__item",p,null==n?void 0:n.className,{"tabs__item--active":O===e})}),null!=t?t:e)))),n?(0,a.cloneElement)(g.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function m(e){const t=(0,i.Z)();return a.createElement(d,u({key:String(t)},e))}}}]);