"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[3557],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7626:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294),a=n(86010);const o="tabItem_Ymn6";function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function l({children:e,hidden:t,className:n}){return r.createElement("div",i({role:"tabpanel",className:(0,a.Z)(o,n)},{hidden:t}),e)}},67709:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(67294),a=n(86010),o=n(90980),i=n(35715),l=n(8854),s=n(8241);const c="tabList__CuJ",u="tabItem_LNqP";function p(){return p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},p.apply(this,arguments)}function d(e){var t;const{lazy:n,block:o,defaultValue:d,values:m,groupId:g,className:v}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=null!=m?m:f.map((({props:{value:e,label:t,attributes:n}})=>({value:e,label:t,attributes:n}))),k=(0,i.l)(h,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var b;const y=null===d?d:null!==(b=null!=d?d:null===(t=f.find((e=>e.props.default)))||void 0===t?void 0:t.props.value)&&void 0!==b?b:f[0].props.value;if(null!==y&&!h.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:w}=(0,l.U)(),[O,C]=(0,r.useState)(y),E=[],{blockElementScrollPositionUntilNextRender:_}=(0,s.o5)();if(null!=g){const e=N[g];null!=e&&e!==O&&h.some((t=>t.value===e))&&C(e)}const A=e=>{const t=e.currentTarget,n=E.indexOf(t),r=h[n].value;r!==O&&(_(t),C(r),null!=g&&w(g,String(r)))},P=e=>{let t=null;switch(e.key){case"ArrowRight":{const r=E.indexOf(e.currentTarget)+1;var n;t=null!==(n=E[r])&&void 0!==n?n:E[0];break}case"ArrowLeft":{const n=E.indexOf(e.currentTarget)-1;var r;t=null!==(r=E[n])&&void 0!==r?r:E[E.length-1];break}}null==t||t.focus()};return r.createElement("div",{className:(0,a.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":o},v)},h.map((({value:e,label:t,attributes:n})=>r.createElement("li",p({role:"tab",tabIndex:O===e?0:-1,"aria-selected":O===e,key:e,ref:e=>E.push(e),onKeyDown:P,onFocus:A,onClick:A},n,{className:(0,a.Z)("tabs__item",u,null==n?void 0:n.className,{"tabs__item--active":O===e})}),null!=t?t:e)))),n?(0,r.cloneElement)(f.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function m(e){const t=(0,o.Z)();return r.createElement(d,p({key:String(t)},e))}},45965:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>u,toc:()=>d});n(67294);var r=n(3905),a=n(67709),o=n(7626);function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={id:"administration",title:"Administration"},c=void 0,u={unversionedId:"monitoring/discovery/administration",id:"version-23.10/monitoring/discovery/administration",title:"Administration",description:"Update",source:"@site/versioned_docs/version-23.10/monitoring/discovery/administration.md",sourceDirName:"monitoring/discovery",slug:"/monitoring/discovery/administration",permalink:"/centreon-documentation/pr-preview/pr-2832/docs/monitoring/discovery/administration",draft:!1,editUrl:"https://github.com/centreon/centreon-documentation/edit/next/versioned_docs/version-23.10/monitoring/discovery/administration.md",tags:[],version:"23.10",lastUpdatedAt:1700565273,formattedLastUpdatedAt:"Nov 21, 2023",frontMatter:{id:"administration",title:"Administration"},sidebar:"version-23.10/docs",previous:{title:"Discovering services automatically",permalink:"/centreon-documentation/pr-preview/pr-2832/docs/monitoring/discovery/services-discovery"},next:{title:"Troubleshooting host discovery issues",permalink:"/centreon-documentation/pr-preview/pr-2832/docs/monitoring/discovery/troubleshooting-hosts-discovery"}},p={},d=[{value:"Update",id:"update",level:2},{value:"Uninstallation",id:"uninstallation",level:2},{value:"Gorgone module configuration",id:"gorgone-module-configuration",level:2},{value:"Distributed architecture",id:"distributed-architecture",level:3},{value:"Service Discovery scheduled job",id:"service-discovery-scheduled-job",level:3},{value:"API accesses",id:"api-accesses",level:3}],m={toc:d};function g(e){var{components:t}=e,s=l(e,["components"]);return(0,r.kt)("wrapper",i({},m,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",i({},{id:"update"}),"Update"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"To update the module, run the following command:")),(0,r.kt)(a.Z,{groupId:"sync",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Alma / RHEL / Oracle Linux 8",label:"Alma / RHEL / Oracle Linux 8",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-shell"}),"dnf update -y centreon-auto-discovery-server\n"))),(0,r.kt)(o.Z,{value:"Alma / RHEL / Oracle Linux 9",label:"Alma / RHEL / Oracle Linux 9",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-shell"}),"dnf update -y centreon-auto-discovery-server\n"))),(0,r.kt)(o.Z,{value:"Debian 11",label:"Debian 11",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-shell"}),"apt update && apt update centreon-auto-discovery-server\n")))),(0,r.kt)("ol",i({},{start:2}),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Connect to the Centreon web interface using an account allowed to install\nproducts and go to the ",(0,r.kt)("strong",{parentName:"p"},"Administration > Extensions > Manager")," page.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure the ",(0,r.kt)("strong",{parentName:"p"},"License Manager")," and ",(0,r.kt)("strong",{parentName:"p"},"Monitoring Connectors Manager")," modules are\nup to date before updating the ",(0,r.kt)("strong",{parentName:"p"},"Auto Discovery")," module.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click the update icon corresponding to the ",(0,r.kt)("strong",{parentName:"p"},"Auto Discovery"),"\nmodule:"),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("img",{alt:"image",src:n(17864).Z,width:"935",height:"410"})),(0,r.kt)("p",{parentName:"li"},"  The module is now updated:"),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("img",{alt:"image",src:n(51741).Z,width:"564",height:"308"})))),(0,r.kt)("h2",i({},{id:"uninstallation"}),"Uninstallation"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Uninstalling the module will also remove all the associated data. Data won't\nbe restorable unless a database backup has been made.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Connect to the Centreon web interface using an account allowed to install\nproducts and go to the ",(0,r.kt)("strong",{parentName:"p"},"Administration > Extensions > Manager")," page.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click the delete icon corresponding to the ",(0,r.kt)("strong",{parentName:"p"},"Auto Discovery"),"\nmodule:"),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("img",{alt:"image",src:n(51741).Z,width:"564",height:"308"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A confirmation popup will appear. Confirm the action:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:n(41386).Z,width:"355",height:"251"})),(0,r.kt)("p",{parentName:"li"},"The module is now uninstalled:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:n(95819).Z,width:"935",height:"410"})))),(0,r.kt)("h2",i({},{id:"gorgone-module-configuration"}),"Gorgone module configuration"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Auto Discovery")," module brings a specific configuration for the Gorgone\nservice on the Central server. The default configuration is\n",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/centreon-gorgone/config.d/41-autodiscovery.yaml"),"."),(0,r.kt)("p",null,"A maximum duration for host discovery jobs is set globally. If it is necessary to\nchange it (large subnet SNMP discovery, for example), edit the configuration and\nadd the ",(0,r.kt)("em",{parentName:"p"},"global_timeout")," directive."),(0,r.kt)("p",null,"If mail notifications are enabled in service discovery rules, mail parameters\ncan be defined to choose the sender, subject or mail command."),(0,r.kt)("p",null,"Example configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-yaml"}),'gorgone:\n  modules:\n    - name: autodiscovery\n      package: "gorgone::modules::centreon::autodiscovery::hooks"\n      enable: true\n      # Host Discovery\n      check_interval: 15\n      global_timeout: 300\n      # Service Discovery\n      mail_subject: Centreon Auto Discovery\n      mail_from: centreon-autodisco\n      mail_command: /bin/mail\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Be sure to restart the Gorgone service after any configuration modification:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",i({parentName:"pre"},{className:"language-shell"}),"systemctl restart gorgoned\n"))),(0,r.kt)("h3",i({},{id:"distributed-architecture"}),"Distributed architecture"),(0,r.kt)("p",null,"The host and service discoveries both rely on Gorgone to perform discoveries\non both Central and Remote Servers or Pollers."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"It is necessary to have a ZMQ communication between the Central server and a\nRemote Server to perform a discovery on a Poller attached to this Remote\nServer."),(0,r.kt)("p",{parentName:"blockquote"},"Look at the section presenting the different ",(0,r.kt)("a",i({parentName:"p"},{href:"/centreon-documentation/pr-preview/pr-2832/docs/monitoring/monitoring-servers/communications"}),"communication\ntypes")," to know more.")),(0,r.kt)("h3",i({},{id:"service-discovery-scheduled-job"}),"Service Discovery scheduled job"),(0,r.kt)("p",null,"All the active discovery rules are periodically executed through a scheduled job\nmanaged by Gorgone's cron module. The ",(0,r.kt)("strong",{parentName:"p"},"Auto Discovery")," module brings a cron\ndefinition in the following file:\n",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/centreon-gorgone/config.d/cron.d/41-service-discovery.yaml"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-yaml"}),'- id: service_discovery\n  timespec: "30 22 * * *"\n  action: LAUNCHSERVICEDISCOVERY\n')),(0,r.kt)("p",null,"The default configuration runs the discovery every day at 10:30 PM."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you have changed the legacy ",(0,r.kt)("em",{parentName:"p"},"crond")," configuration file to adapt the schedule,\nyou must apply changes to the new configuration file.")),(0,r.kt)("p",null,"It is also possible to run multiple service discoveries with different\nparameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-yaml"}),'- id: service_discovery_poller_1\n  timespec: "15 9 * * *"\n  action: LAUNCHSERVICEDISCOVERY\n  parameters:\n    filter_pollers:\n      - Poller-1\n- id: service_discovery_poller_2_linux\n  timespec: "30 9 * * *"\n  action: LAUNCHSERVICEDISCOVERY\n  parameters:\n    filter_pollers:\n      - Poller-2\n    filter_rules:\n      - OS-Linux-SNMP-Disk-Name\n      - OS-Linux-SNMP-Traffic-Name\n- id: service_discovery_poller_2_windows\n  timespec: "45 9 * * *"\n  action: LAUNCHSERVICEDISCOVERY\n  parameters:\n    filter_pollers:\n      - Poller-2\n    filter_rules:\n      - OS-Windows-SNMP-Disk-Name\n      - OS-Windows-SNMP-Traffic-Name\n')),(0,r.kt)("p",null,"Here is the list of all available parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",i({parentName:"tr"},{align:null}),"Key"),(0,r.kt)("th",i({parentName:"tr"},{align:null}),"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:null}),"filter","_","rules"),(0,r.kt)("td",i({parentName:"tr"},{align:null}),"Array of rules to use for discovery (empty means all)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:null}),"force","_","rule"),(0,r.kt)("td",i({parentName:"tr"},{align:null}),"Run disabled rules ('0': not forced, '1': forced)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:null}),"filter","_","hosts"),(0,r.kt)("td",i({parentName:"tr"},{align:null}),"Array of hosts which will run the discovery (empty means all)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:null}),"filter","_","pollers"),(0,r.kt)("td",i({parentName:"tr"},{align:null}),"Array of pollers for which linked hosts will undergo discovery (empty means all)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:null}),"dry","_","run"),(0,r.kt)("td",i({parentName:"tr"},{align:null}),"Run discovery without configuration changes ('0': changes, '1': dry run)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",i({parentName:"tr"},{align:null}),"no","_","generate","_","config"),(0,r.kt)("td",i({parentName:"tr"},{align:null}),"No configuration generation (even if there are some changes) ('0': generation, '1': no generation)")))),(0,r.kt)("h3",i({},{id:"api-accesses"}),"API accesses"),(0,r.kt)("p",null,"When installing Gorgone, a default configuration to access the Centreon APIs is\nlocated at ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/centreon-gorgone/config.d/31-centreon-api.yaml"),"."),(0,r.kt)("p",null,"It defines accesses to both Centreon CLAPI and RestAPI to allow discovery to\ncommunicate with Centreon."),(0,r.kt)("p",null,"Example configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{className:"language-yaml"}),'gorgone:\n  tpapi:\n    - name: centreonv2\n      base_url: "http://127.0.0.1/centreon/api/latest/"\n      username: api\n      password: bpltc4aY\n    - name: clapi\n      username: cli\n      password: PYNM5kcc\n')),(0,r.kt)("p",null,"Access to RestAPI, represented by ",(0,r.kt)("em",{parentName:"p"},"centreonv2"),", requires credentials of a\nuser with ",(0,r.kt)("em",{parentName:"p"},"Reach API Configuration")," access. It is used for Host Discovery."),(0,r.kt)("p",null,"Access to CLAPI requires the credentials of an ",(0,r.kt)("em",{parentName:"p"},"Admin")," user. It is used for\nService Discovery."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"One user can be used for both accesses. Furthermore, users don't need\naccess to the Centreon UI.")))}g.isMDXComponent=!0},51741:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/install-after-dd0d51f6e89a7f12567170213f4a3c43.png"},95819:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/install-before-41deca4048b7c1be4406048eb2706df0.png"},41386:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/uninstall-popin-b7948c45f05ae065cae73c975a4582ea.png"},17864:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/update-29d114f6e00e0d73671fbb2e6b45a4a3.png"}}]);