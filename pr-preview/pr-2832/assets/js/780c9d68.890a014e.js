"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[39212],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||l;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},49398:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>k,frontMatter:()=>p,metadata:()=>s,toc:()=>m});n(67294);var a=n(3905),r=n(67709),l=n(7626);function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},i.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const p={id:"blockchain-parity-ethpoller-restapi",title:"Parity Ethpoller API"},c=void 0,s={unversionedId:"integrations/plugin-packs/procedures/blockchain-parity-ethpoller-restapi",id:"integrations/plugin-packs/procedures/blockchain-parity-ethpoller-restapi",title:"Parity Ethpoller API",description:"Overview",source:"@site/pp/integrations/plugin-packs/procedures/blockchain-parity-ethpoller-restapi.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/blockchain-parity-ethpoller-restapi",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/blockchain-parity-ethpoller-restapi",draft:!1,tags:[],version:"current",frontMatter:{id:"blockchain-parity-ethpoller-restapi",title:"Parity Ethpoller API"},sidebar:"pp",previous:{title:"Parity API",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/blockchain-parity-restapi"},next:{title:"Centreon Central",permalink:"/centreon-documentation/pr-preview/pr-2832/pp/integrations/plugin-packs/procedures/applications-monitoring-centreon-central"}},u={},m=[{value:"Overview",id:"overview",level:2},{value:"Pack assets",id:"pack-assets",level:2},{value:"Monitored objects",id:"monitored-objects",level:3},{value:"Collected metrics &amp; status",id:"collected-metrics--status",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Host configuration",id:"host-configuration",level:3},{value:"How to check with the CLI that the configuration is OK and what are the main options for ?",id:"how-to-check-with-the-cli-that-the-configuration-is-ok-and-what-are-the-main-options-for-",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"UNKNOWN: Can&#39;t connect to ...",id:"unknown-cant-connect-to-",level:3},{value:"UNKNOWN: Cannot decode json response",id:"unknown-cannot-decode-json-response",level:3}],d={toc:m};function k(e){var{components:t}=e,n=o(e,["components"]);return(0,a.kt)("wrapper",i({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",i({},{id:"overview"}),"Overview"),(0,a.kt)("p",null,"Event poller with RESTful API for both Ethereum and Hyperledger Fabric Blockchain technologies. "),(0,a.kt)("p",null,"The Centreon Plugin-Pack ",(0,a.kt)("em",{parentName:"p"},"Ethpoller API")," connects to various API endpoints to gather application,\nadoption and utilization metrics of a Blockchain implementation. "),(0,a.kt)("h2",i({},{id:"pack-assets"}),"Pack assets"),(0,a.kt)("h3",i({},{id:"monitored-objects"}),"Monitored objects"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Blockchain Parity Ethpoller endpoint",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Tracking"),(0,a.kt)("li",{parentName:"ul"},"Stats"),(0,a.kt)("li",{parentName:"ul"},"Disk  ")))),(0,a.kt)("h3",i({},{id:"collected-metrics--status"}),"Collected metrics & status"),(0,a.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"Tracking",label:"Tracking",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,a.kt)("th",i({parentName:"tr"},{align:null}),"Unit"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"parity.tracking.events.perminute"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of events by minute"),(0,a.kt)("td",i({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"parity.tracking.mined.block.prct"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Percentage of block mined"),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"%")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"parity.tracking.balance.changes.perminute"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of balance changes per minute"),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"wei"))))),(0,a.kt)(l.Z,{value:"Stats",label:"Stats",mdxType:"TabItem"},(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Per ",(0,a.kt)("em",{parentName:"li"},"block"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,a.kt)("th",i({parentName:"tr"},{align:null}),"Unit"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"parity.stats.block.perminute"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of block per minute"),(0,a.kt)("td",i({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"parity.stats.transaction.perminute"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of transaction per minute"),(0,a.kt)("td",i({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"parity.stats.fork.perminute"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Number of fork per minute"),(0,a.kt)("td",i({parentName:"tr"},{align:null})))))),(0,a.kt)(l.Z,{value:"Disk",label:"Disk",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Metric name"),(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"),(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Unit"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"eth.poller.disk.free"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Free space"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"B")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"eth.poller.disk.available"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Availability space"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"B")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"eth.poller.disk.size"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Total size"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"B")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"eth.poller.disk.used"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Used space"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"B")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"eth.poller.disk.usage"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Disk usage"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"%")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"eth.poller.blockchain.directory"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Size of blockchain directory"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"B")))))),(0,a.kt)("h2",i({},{id:"prerequisites"}),"Prerequisites"),(0,a.kt)("p",null,"To get data from the BCM/ETH Poller, deploy it within your Blockchain network thanks to\nIRT-Systemx's ",(0,a.kt)("a",i({parentName:"p"},{href:"https://github.com/IRT-SystemX/bcm-poller#getting-started"}),"official documentation")),(0,a.kt)("p",null,"To get data from the API, the Poller must be able to communicate with it over the configured port (default: 8000). "),(0,a.kt)("h2",i({},{id:"setup"}),"Setup"),(0,a.kt)(r.Z,{groupId:"sync",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Centreon Poller expected to monitor ",(0,a.kt)("em",{parentName:"li"},"Parity or Hyperledger")," blockchains:")),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Blockchain-Parity-Ethpoller-Restapi\n")),(0,a.kt)("ol",i({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,a.kt)("em",{parentName:"li"},"Ethpoller API"),' Centreon Plugin Pack on the "Configuration > Plugin Packs" page'))),(0,a.kt)(l.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install the Centreon Plugin package on every Centreon Poller expected to monitor ",(0,a.kt)("em",{parentName:"li"},"Parity or Hyperledger")," blockchains:")),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-plugin-Blockchain-Parity-Ethpoller-Restapi\n")),(0,a.kt)("ol",i({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"Install the ",(0,a.kt)("em",{parentName:"li"},"Ethpoller API")," Centreon Plugin-Pack RPM on the Centreon Central server:")),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"yum install centreon-pack-blockchain-parity-ethpoller-restapi\n")),(0,a.kt)("ol",i({},{start:3}),(0,a.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,a.kt)("em",{parentName:"li"},"Ethpoller API"),' Centreon Plugin Pack on the "Configuration > Plugin Packs" page')))),(0,a.kt)("h2",i({},{id:"configuration"}),"Configuration"),(0,a.kt)("h3",i({},{id:"host-configuration"}),"Host configuration"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'Log into Centreon and add a new Host through "Configuration > Hosts".'),(0,a.kt)("li",{parentName:"ul"},'Fill the "Name", "Alias" & "IP Address / DNS" fields according to your ',(0,a.kt)("em",{parentName:"li"},"TO CHANGE")," Server settings"),(0,a.kt)("li",{parentName:"ul"},"Apply the ",(0,a.kt)("em",{parentName:"li"},"Blockchain-Parity-Ethpoller-Restapi-custom")," template and configure all the mandatory Macros:")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Mandatory"),(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Name"),(0,a.kt)("th",i({parentName:"tr"},{align:"left"}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"X"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"ETHPOLLERAPIPORT"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Port used (Default: '8000')")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"X"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"ETHPOLLERPROTO"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Protocol used (Default: 'http')")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"X"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"ETHPOLLERAPIURLPATH"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Path to the API - (Default: '/')")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"})),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"TIMEOUT"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Request timeout")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:"left"})),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"ETHPOLLEREXTRAOPTIONS"),(0,a.kt)("td",i({parentName:"tr"},{align:"left"}),"Any extra option you may want to add to every command","_","line (eg. a --verbose flag)")))),(0,a.kt)("h2",i({},{id:"how-to-check-with-the-cli-that-the-configuration-is-ok-and-what-are-the-main-options-for-"}),"How to check with the CLI that the configuration is OK and what are the main options for ?"),(0,a.kt)("p",null,"Once the plugin installed, log into your Centreon Poller CLI using the\n",(0,a.kt)("em",{parentName:"p"},"centreon-engine")," user account and test the Plugin by running the following\ncommand:"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_blockchain_parity_ethpoller_api.pl  \\ \n   --plugin=blockchain::parity::ethpoller::plugin  \\ \n   --mode=tracking  \\ \n   --hostname=10.0.0.1  \\ \n   --port='8000'  \\ \n   --proto='http'  \\ \n   --url-path='/'  \\ \n   --timeout='10' \\ \n   --warning-balance-changes=''  \\ \n   --critical-balance-changes=''  \\ \n   --warning-events-frequency=''  \\ \n   --critical-events-frequency=''  \\ \n   --warning-mining-frequency=''  \\ \n   --critical-mining-frequency=''  \\ \n   --warning-mining-prct=''  \\ \n   --critical-mining-prct='50:'   \n")),(0,a.kt)("p",null,"Expected command output is shown below:"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"OK: Events metrics are ok - Mining metrics are ok - Balances metrics are ok |\n'agent1#parity.tracking.events.perminute'=5.00;;;; 'agent2#parity.tracking.events.perminute'=15.00;;;; 'agent3#parity.tracking.events.perminute'=15.00;;;; 'agent4#parity.tracking.events.perminute'=10.00;;;; 'agent5#parity.tracking.events.perminute'=0.00;;;; 'credit#parity.tracking.events.perminute'=10.00;;;; 'deploy#parity.tracking.events.perminute'=20.00;;;; 'registry#parity.tracking.events.perminute'=5.00;;;; 'black#parity.tracking.mined.block.perminute'=5.00;;;; 'black#parity.tracking.mined.block.prct'=33.41%;;;0; 'gray#parity.tracking.mined.block.perminute'=10.00;;;; 'gray#parity.tracking.mined.block.prct'=33.14%;;;0; 'white#parity.tracking.mined.block.perminute'=10.00;;;; 'white#parity.tracking.mined.block.prct'=33.46%;;;0; 'master#parity.tracking.balance.changes.perminute'=0.00wei;;;; 'random#parity.tracking.balance.changes.perminute'=729999999999997378560.00wei;;;; \n")),(0,a.kt)("p",null,"This command would trigger a CRITICAL alarm if a node mined less than 50% of all blocks (",(0,a.kt)("inlineCode",{parentName:"p"},"--critical-mining-prct=50:"),"). "),(0,a.kt)("p",null,"All available options for a given mode can be displayed by adding the\n",(0,a.kt)("inlineCode",{parentName:"p"},"--help")," parameter to the command:"),(0,a.kt)("p",null," All plugin modes can be listed with the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-bash"}),"/usr/lib/centreon/plugins//centreon_blockchain_parity_ethpoller_api.pl  \\ \n   --plugin=blockchain::parity::ethpoller::plugin  \\ \n   --list-mode\n")),(0,a.kt)("h2",i({},{id:"troubleshooting"}),"Troubleshooting"),(0,a.kt)("h3",i({},{id:"unknown-cant-connect-to-"}),"UNKNOWN: Can't connect to ..."),(0,a.kt)("p",null,"This error message means that the Centreon Plugin couldn't successfully connect to the Ethpoller API. Check that no third party\ndevice (such as a firewall) is blocking the request. "),(0,a.kt)("h3",i({},{id:"unknown-cannot-decode-json-response"}),"UNKNOWN: Cannot decode json response"),(0,a.kt)("p",null,"This error message means that the Centreon Plugin couldn't successfully connect to the Ethpoller API. Check that no third party\ndevice (such as a firewall) is blocking the request. A proxy connection may also be necessary to connect to the API.\nThis can be done by using this option in the command: ",(0,a.kt)("inlineCode",{parentName:"p"},"--proxyurl='http://proxy.mycompany:8080'"),"."))}k.isMDXComponent=!0},7626:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const l="tabItem_Ymn6";function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},i.apply(this,arguments)}function o({children:e,hidden:t,className:n}){return a.createElement("div",i({role:"tabpanel",className:(0,r.Z)(l,n)},{hidden:t}),e)}},67709:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(67294),r=n(86010),l=n(90980),i=n(35715),o=n(8854),p=n(8241);const c="tabList__CuJ",s="tabItem_LNqP";function u(){return u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},u.apply(this,arguments)}function m(e){var t;const{lazy:n,block:l,defaultValue:m,values:d,groupId:k,className:g}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=null!=d?d:h.map((({props:{value:e,label:t,attributes:n}})=>({value:e,label:t,attributes:n}))),b=(0,i.l)(f,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);var y;const N=null===m?m:null!==(y=null!=m?m:null===(t=h.find((e=>e.props.default)))||void 0===t?void 0:t.props.value)&&void 0!==y?y:h[0].props.value;if(null!==N&&!f.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:P}=(0,o.U)(),[w,O]=(0,a.useState)(N),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,p.o5)();if(null!=k){const e=v[k];null!=e&&e!==w&&f.some((t=>t.value===e))&&O(e)}const C=e=>{const t=e.currentTarget,n=T.indexOf(t),a=f[n].value;a!==w&&(E(t),O(a),null!=k&&P(k,String(a)))},I=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=T.indexOf(e.currentTarget)+1;var n;t=null!==(n=T[a])&&void 0!==n?n:T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;var a;t=null!==(a=T[n])&&void 0!==a?a:T[T.length-1];break}}null==t||t.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},g)},f.map((({value:e,label:t,attributes:n})=>a.createElement("li",u({role:"tab",tabIndex:w===e?0:-1,"aria-selected":w===e,key:e,ref:e=>T.push(e),onKeyDown:I,onFocus:C,onClick:C},n,{className:(0,r.Z)("tabs__item",s,null==n?void 0:n.className,{"tabs__item--active":w===e})}),null!=t?t:e)))),n?(0,a.cloneElement)(h.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,l.Z)();return a.createElement(m,u({key:String(t)},e))}}}]);