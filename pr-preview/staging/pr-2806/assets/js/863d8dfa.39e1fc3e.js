"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[21732],{51214:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>k,frontMatter:()=>c,metadata:()=>u,toc:()=>m});a(67294);var n=a(3905),o=a(51715),r=a(7626);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}const c={id:"cloud-aws-cloudwatchlogs",title:"Amazon CloudWatch Logs"},p=void 0,u={unversionedId:"integrations/plugin-packs/procedures/cloud-aws-cloudwatchlogs",id:"integrations/plugin-packs/procedures/cloud-aws-cloudwatchlogs",title:"Amazon CloudWatch Logs",description:"Overview",source:"@site/pp/integrations/plugin-packs/procedures/cloud-aws-cloudwatchlogs.md",sourceDirName:"integrations/plugin-packs/procedures",slug:"/integrations/plugin-packs/procedures/cloud-aws-cloudwatchlogs",permalink:"/centreon-documentation/pr-preview/staging/pr-2806/pp/integrations/plugin-packs/procedures/cloud-aws-cloudwatchlogs",draft:!1,editUrl:"https://github.com/centreon/centreon-documentation/edit/staging/pp/integrations/plugin-packs/procedures/cloud-aws-cloudwatchlogs.md",tags:[],version:"current",frontMatter:{id:"cloud-aws-cloudwatchlogs",title:"Amazon CloudWatch Logs"},sidebar:"pp",previous:{title:"Amazon CloudWatch",permalink:"/centreon-documentation/pr-preview/staging/pr-2806/pp/integrations/plugin-packs/procedures/cloud-aws-cloudwatch"},next:{title:"Amazon Direct Connect",permalink:"/centreon-documentation/pr-preview/staging/pr-2806/pp/integrations/plugin-packs/procedures/cloud-aws-directconnect"}},d={},m=[{value:"Overview",id:"overview",level:2},{value:"Monitoring Connector assets",id:"monitoring-connector-assets",level:2},{value:"Monitored objects",id:"monitored-objects",level:3},{value:"Collected data",id:"collected-data",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"AWS Configuration",id:"aws-configuration",level:3},{value:"Plugin dependencies",id:"plugin-dependencies",level:3},{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"FAQ",id:"faq",level:2},{value:"How to check in the CLI that the configuration is OK and what are the main options for ?",id:"how-to-check-in-the-cli-that-the-configuration-is-ok-and-what-are-the-main-options-for-",level:3},{value:"Why do I get the following result:",id:"why-do-i-get-the-following-result",level:3},{value:"<code>UNKNOWN: Command error:  - An error occurred (AuthFailure) [...]</code> ?",id:"unknown-command-error----an-error-occurred-authfailure--",level:4},{value:"<code>UNKNOWN: 500 Can&#39;t connect to monitoring.us-east-1.amazonaws.com:443 |</code>",id:"unknown-500-cant-connect-to-monitoringus-east-1amazonawscom443-",level:4}],g={toc:m},h="wrapper";function k(e){var{components:t}=e,a=s(e,["components"]);return(0,n.kt)(h,i(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),n.forEach((function(t){l(e,t,a[t])}))}return e}({},g,a),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"CloudWatch Logs enables you to centralize the logs from all of your systems, applications,\nand AWS services that you use, in a single, highly scalable service. You can then easily view them,\nsearch them for specific error codes or patterns, filter them based on specific fields,\nor archive them securely for future analysis"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This Plugin may generate very huge queries toward CloudWatch Logs API. Make sure to use filtering capability\nwith ",(0,n.kt)("inlineCode",{parentName:"p"},"--group-name")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"--stream-name")," options. ")),(0,n.kt)("h2",{id:"monitoring-connector-assets"},"Monitoring Connector assets"),(0,n.kt)("h3",{id:"monitored-objects"},"Monitored objects"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Log entries related to groups and underlying streams")),(0,n.kt)("h3",{id:"collected-data"},"Collected data"),(0,n.kt)(o.Z,{groupId:"sync",mdxType:"Tabs"},(0,n.kt)(r.Z,{value:"Get-Logs",label:"Get-Logs",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Metric name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Logs"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Refer to any log entry that match filters. Threshold are String on top of %{message}, %{stream","_","name}, %{since} variables")))),(0,n.kt)("p",null,"You can filter the scope of the query using ",(0,n.kt)("inlineCode",{parentName:"p"},"--group-name")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"--stream-name")," options."))),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("h3",{id:"aws-configuration"},"AWS Configuration"),(0,n.kt)("p",null,"Configure a service account (",(0,n.kt)("em",{parentName:"p"},"access/secret keys")," combo) for which the following privileges have to be granted:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"AWS Privilege"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"CloudWatchLogs:DescribeLogGroups"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Returns information about Log groups that meet the specified filter criteria.")))),(0,n.kt)("h3",{id:"plugin-dependencies"},"Plugin dependencies"),(0,n.kt)("p",null,"To interact with Amazon APIs, you can use either use the ",(0,n.kt)("em",{parentName:"p"},"awscli")," binary provided by Amazon or ",(0,n.kt)("em",{parentName:"p"},"paws"),", a Perl AWS SDK (recommended).\nYou must install it on every Centreon poller expected to monitor AWS Health: "),(0,n.kt)(o.Z,{groupId:"sync",mdxType:"Tabs"},(0,n.kt)(r.Z,{value:"perl-Paws-installation",label:"perl-Paws-installation",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yum install perl-Paws\n"))),(0,n.kt)(r.Z,{value:"aws-cli-installation",label:"aws-cli-installation",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yum install awscli\n")))),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"For now, it is not possible to use ",(0,n.kt)("em",{parentName:"p"},"paws")," in the following situations:"),(0,n.kt)("ul",{parentName:"blockquote"},(0,n.kt)("li",{parentName:"ul"},"if you are using a proxy to reach AWS Cloudwatch APIs. "),(0,n.kt)("li",{parentName:"ul"},"to automatically add Hosts in Centreon using the ",(0,n.kt)("em",{parentName:"li"},"Host Discovery")," feature"))),(0,n.kt)("h2",{id:"setup"},"Setup"),(0,n.kt)(o.Z,{groupId:"sync",mdxType:"Tabs"},(0,n.kt)(r.Z,{value:"Online License",label:"Online License",mdxType:"TabItem"},(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install the Centreon package on every Centreon poller expected to monitor Amazon CloudWatch Logs:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yum install centreon-plugin-Cloud-Aws-CloudWatchLogs-Api\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,n.kt)("em",{parentName:"li"},"Amazon CloudWatch Logs")," Centreon Monitoring Connector on the ",(0,n.kt)("strong",{parentName:"li"},"Configuration > Monitoring Connectors Manager")," page"))),(0,n.kt)(r.Z,{value:"Offline License",label:"Offline License",mdxType:"TabItem"},(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install the Centreon package on every Centreon poller expected to monitor Amazon CloudWatch Logs:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yum install centreon-plugin-Cloud-Aws-CloudWatchLogs-Api\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Install the Centreon Monitoring Connector RPM on the Centreon Central server:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yum install centreon-pack-cloud-aws-cloudwatchlogs.noarch\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"On the Centreon Web interface, install the ",(0,n.kt)("em",{parentName:"li"},"Amazon CloudWatch Logs")," Centreon Monitoring Connector on the ",(0,n.kt)("strong",{parentName:"li"},"Configuration > Monitoring Connectors Manager")," page")))),(0,n.kt)("h2",{id:"configuration"},"Configuration"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Log into Centreon and add a new Host through "Configuration > Hosts". '),(0,n.kt)("li",{parentName:"ul"},"Select the ",(0,n.kt)("em",{parentName:"li"},"Cloud-Aws-CloudWatchLogs")," template to apply to the Host."),(0,n.kt)("li",{parentName:"ul"},"Once the template applied, some Macros marked as 'Mandatory' hereafter have to be configured:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Mandatory"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Nom"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"X"),(0,n.kt)("td",{parentName:"tr",align:"left"},"AWSSECRETKEY"),(0,n.kt)("td",{parentName:"tr",align:"left"},"AWS Secret key of your IAM role. Password checkbox must be checked")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"X"),(0,n.kt)("td",{parentName:"tr",align:"left"},"AWSACESSKEY"),(0,n.kt)("td",{parentName:"tr",align:"left"},"AWS Access key of your IAM role. Password checkbox must be checked")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"X"),(0,n.kt)("td",{parentName:"tr",align:"left"},"AWSREGION"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Region where the instance is running")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"X"),(0,n.kt)("td",{parentName:"tr",align:"left"},"AWSCUSTOMMODE"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Custom mode to get metrics, 'awscli' is the default, you can also use 'paws' perl library")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"PROXYURL"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configure proxy URL")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"EXTRAOPTIONS"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Any extra option you may want to add to every command","_","line (eg. a --verbose flag)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"DUMMYSTATUS"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Host state. Default is OK, do not modify it unless you know what you are doing")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"DUMMYOUTPUT"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Host check output. Default is 'This is a dummy check'. Customize it with your own if needed")))),(0,n.kt)("h2",{id:"faq"},"FAQ"),(0,n.kt)("h3",{id:"how-to-check-in-the-cli-that-the-configuration-is-ok-and-what-are-the-main-options-for-"},"How to check in the CLI that the configuration is OK and what are the main options for ?"),(0,n.kt)("p",null,"Once the plugin installed, log into your Centreon Poller CLI using the ",(0,n.kt)("em",{parentName:"p"},"centreon-engine")," user account and test the Plugin\nby running the following command (Some of the parameters such as ",(0,n.kt)("inlineCode",{parentName:"p"},"proxyurl")," have to be adjusted):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/lib/centreon/plugins/centreon_aws_cloudwatchlogs_api.pl \\\n --plugin=cloud::aws::cloudwatchlogs::plugin \\\n --mode=get-logs \\\n --custommode='awscli' \\\n --aws-secret-key='****' \\\n --aws-access-key='****' \\\n --proxyurl='' \\\n --region='eu-west-1' \\\n --group-name='/aws/lambda/MyLambda_LogGroup' \\\n --stream-name='' \\\n --start-time-since='3000' \\\n --unknown-status='' \\\n --warning-status='' \\\n --critical-status='%{message} =~ /region/i' \\\n --verbose\n")),(0,n.kt)("p",null,"Expected command output is shown below: "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"CRITICAL: 10 problem(s) detected | 'logs'=10;;;0;\ncritical: log [created: 5m 11s] [stream: 2020/07/21/[$LATEST]57eb66feaf4aa7bc46gr0e91aeac2b99] [message: [INFO] 2020-07-21T14:35:31.591Z    edcea75a-41ceaa-43ae0-8fa6-1cfea0d0dc  Set REGION: eu-west-1 -- ]\n[...]\ncritical: log [created: 10m 11s] [stream: 2020/07/21/[$LATEST]57eb66eac4cea0e91ce2b99] [message: [INFO]    2020-07-21T14:30:31.767Z    8a62ac5e-d6dd-44Da-b23e-bce42fef3  Set REGION: eu-west-1 -- ]\n")),(0,n.kt)("p",null,"The command above monitors the ",(0,n.kt)("em",{parentName:"p"},"logs")," (",(0,n.kt)("inlineCode",{parentName:"p"},"--mode=get-logs"),") of an AWS account identified by the usage of API credentials (",(0,n.kt)("inlineCode",{parentName:"p"},"--aws-secret-key='****' --aws-access-key='****'"),"). "),(0,n.kt)("p",null,"To avoid performance issues, the LogGroup filter is mandatory (",(0,n.kt)("inlineCode",{parentName:"p"},"--group-name='/aws/lambda/MyLambda_LogGroup'"),") and you can also narrow the query to filter logs created since a specific amount of time (",(0,n.kt)("inlineCode",{parentName:"p"},"--start-time-since='3000'"),")."),(0,n.kt)("p",null,"This command would trigger a CRITICAL alert if the message contains the word 'region' without being case sensitive (",(0,n.kt)("inlineCode",{parentName:"p"},"--critical-status='%{message} =~ /region/i'"),"). "),(0,n.kt)("p",null,"All the filters that can be used as well as all the available thresholds parameters can be displayed by adding the  ",(0,n.kt)("inlineCode",{parentName:"p"},"--help"),"\nparameter to the command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/lib/centreon/plugins/centreon_aws_cloudwatchlogs_api.pl --plugin=cloud::aws::cloudwatchlogs::plugin --mode=get-logs --help\n")),(0,n.kt)("h3",{id:"why-do-i-get-the-following-result"},"Why do I get the following result:"),(0,n.kt)("h4",{id:"unknown-command-error----an-error-occurred-authfailure--"},(0,n.kt)("inlineCode",{parentName:"h4"},"UNKNOWN: Command error:  - An error occurred (AuthFailure) [...]")," ?"),(0,n.kt)("p",null,"This command result means that the credentials provided don't have enough privileges to perform the underlying AWS Operation."),(0,n.kt)("h4",{id:"unknown-500-cant-connect-to-monitoringus-east-1amazonawscom443-"},(0,n.kt)("inlineCode",{parentName:"h4"},"UNKNOWN: 500 Can't connect to monitoring.us-east-1.amazonaws.com:443 |")),(0,n.kt)("p",null,"This error message means that the Centreon Plugin couldn't successfully connect to the AWS CloudWatch API.\nCheck that no third party device (such as a firewall) is blocking the request.\nA proxy connection may also be necessary to connect to the API.\nThis can be done by using this option in the command: ",(0,n.kt)("inlineCode",{parentName:"p"},"--proxyurl='http://proxy.mycompany:8080'"),"."))}k.isMDXComponent=!0}}]);