"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[8265],{65936:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>d});n(67294);var r=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={id:"developer-broker-stream-connector-migration",title:"Stream connector migration to BBDO 3.0.0"},s=void 0,p={unversionedId:"developer/developer-broker-stream-connector-migration",id:"version-23.10/developer/developer-broker-stream-connector-migration",title:"Stream connector migration to BBDO 3.0.0",description:"Centreon Broker 22.04.0 (and later versions) comes with a new 3.0.0 version of its BBDO protocol.",source:"@site/versioned_docs/version-23.10/developer/developer-broker-stream-connector-migration.md",sourceDirName:"developer",slug:"/developer/developer-broker-stream-connector-migration",permalink:"/centreon-documentation/pr-preview/staging/pr-2776/docs/developer/developer-broker-stream-connector-migration",draft:!1,editUrl:"https://github.com/centreon/centreon-documentation/edit/staging/versioned_docs/version-23.10/developer/developer-broker-stream-connector-migration.md",tags:[],version:"23.10",lastUpdatedAt:1699395750,formattedLastUpdatedAt:"Nov 7, 2023",frontMatter:{id:"developer-broker-stream-connector-migration",title:"Stream connector migration to BBDO 3.0.0"},sidebar:"version-23.10/docs",previous:{title:"How to write a Stream Connector",permalink:"/centreon-documentation/pr-preview/staging/pr-2776/docs/developer/developer-stream-connector"},next:{title:"How to translate Centreon",permalink:"/centreon-documentation/pr-preview/staging/pr-2776/docs/developer/developer-translate-centreon"}},c={},d=[{value:"An example of a stream connector that won&#39;t work with BBDO 3.0",id:"an-example-of-a-stream-connector-that-wont-work-with-bbdo-30",level:2}],m={toc:d},k="wrapper";function u(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)(k,a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},m,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Centreon Broker 22.04.0 (and later versions) comes with a new 3.0.0 version of its BBDO protocol.\nThis new protocol is far more flexible than the previous one:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"it is not fixed in time, but can be upgraded without breaking changes."),(0,r.kt)("li",{parentName:"ul"},"it supports more structured objets like arrays, maps and other things."),(0,r.kt)("li",{parentName:"ul"},"serialization generally results into smaller buffers.")),(0,r.kt)("p",null,"All broker events have not yet been migrated; we just focused on:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::host")," event"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::host","_","status")," event"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::service")," event"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::service","_","status")," event")),(0,r.kt)("p",null,"Broker can still read them,but now it produces the following events:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::pb","_","host")," event"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::pb","_","adaptive","_","host")," event"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::pb","_","host","_","status")," event"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::pb","_","service")," event"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::pb","_","adaptive","_","service")," event"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"neb::pb","_","service","_","status")," event")),(0,r.kt)("p",null,"The drawback is if that if you have written stream connectors, they might not work anymore, and\nyou would have to fix them."),(0,r.kt)("p",null,"In this section, we are going to explain what has changed, and then how to fix your\nissue."),(0,r.kt)("h2",{id:"an-example-of-a-stream-connector-that-wont-work-with-bbdo-30"},"An example of a stream connector that won't work with BBDO 3.0"),(0,r.kt)("p",null,"Here is some Lua code for a stream connector that worked before BBDO 3.0 and\nthat will not work with Centreon Broker 22.10 or up if BBDO 3.0 is enabled:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-LUA"},'    function init(conf)\n      broker_log:set_parameters(0, "/tmp/log")\n    end\n\n    function write(d)\n      if d.category == 1 and d.element == 23 then\n        broker_log:info(0, "Here is a service: " .. broker.json_encode(d))\n      end\n      if d.category == 1 and d.element == 12 then\n        broker_log:info(0, "Here is a host: " .. broker.json_encode(d))\n      end\n      return true\n    end\n')),(0,r.kt)("p",null,"This script is very simple. The ",(0,r.kt)("inlineCode",{parentName:"p"},"init()")," function initializes logs to allow\nfor all the logs to be written in the file ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/log"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"write()")," function, called each time an event is received, handles only two\nevents: the ",(0,r.kt)("strong",{parentName:"p"},"neb::service")," event (with ",(0,r.kt)("inlineCode",{parentName:"p"},"category")," 1 and ",(0,r.kt)("inlineCode",{parentName:"p"},"element")," 23) and\nthe ",(0,r.kt)("strong",{parentName:"p"},"neb::host")," event (with ",(0,r.kt)("inlineCode",{parentName:"p"},"category")," 1 and ",(0,r.kt)("inlineCode",{parentName:"p"},"element")," 12)."),(0,r.kt)("p",null,"For each of them, it is serialized in JSON and written to the log file."),(0,r.kt)("p",null,"This script does not work with BBDO 3.0 because it expects the legacy events\n",(0,r.kt)("strong",{parentName:"p"},"neb::host")," and ",(0,r.kt)("strong",{parentName:"p"},"neb::service"),", and while these events can still be\nforwarded by Centreon Broker, they are no longer produced with the new protocol. So\nall the events received by the ",(0,r.kt)("inlineCode",{parentName:"p"},"write()")," function do not match the expected\n",(0,r.kt)("inlineCode",{parentName:"p"},"category")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"element")," values."),(0,r.kt)("p",null,"Instead of ",(0,r.kt)("strong",{parentName:"p"},"neb::service"),", the events produced are ",(0,r.kt)("strong",{parentName:"p"},"neb::pb_service")," and\ninstead of ",(0,r.kt)("strong",{parentName:"p"},"neb::host"),", the events produced are ",(0,r.kt)("strong",{parentName:"p"},"neb::pb_host"),"."),(0,r.kt)("p",null,"So for the script to work again, we just have to add the recognition of these\ntwo new events."),(0,r.kt)("p",null,"As a result, we get the following new script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-LUA"},'    function init(conf)\n      broker_log:set_parameters(0, "/tmp/log")\n    end\n\n    function write(d)\n      if d.category == 1 and (d.element == 27 or d.element == 23) then\n        broker_log:info(0, "Here is a service: " .. broker.json_encode(d))\n      end\n      if d.category == 1 and (d.element == 30 or d.element == 12) then\n        broker_log:info(0, "Here is a host: " .. broker.json_encode(d))\n      end\n      return true\n    end\n')),(0,r.kt)("p",null,"Now, the script should work as expected."),(0,r.kt)("p",null,"If you need to get fields from a ",(0,r.kt)("strong",{parentName:"p"},"neb::service")," event, for example ",(0,r.kt)("strong",{parentName:"p"},"description"),",\nthis same field should also be available in ",(0,r.kt)("strong",{parentName:"p"},"neb::pb_service"),". So generally,\nexcept for the new types to handle, you will have nothing more to do."),(0,r.kt)("p",null,"For the migration, this table can help:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"th"},"legacy object")),(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"th"},"BBDO 3.0 object")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Comments")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"neb::service")," ",(0,r.kt)("br",null)," (1, 23)"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"neb::pb_service")," ",(0,r.kt)("br",null)," (1, 27)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"neb::host")," ",(0,r.kt)("br",null)," (1, 12)"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"neb::pb_host")," ",(0,r.kt)("br",null)," (1, 30)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"neb::service_status")," ",(0,r.kt)("br",null)," (1, 24)"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"neb::pb_service_status")," ",(0,r.kt)("br",null)," (1, 29)"),(0,r.kt)("td",{parentName:"tr",align:null},"New events are lighter. Several fields can be missing. In that case, ",(0,r.kt)("strong",{parentName:"td"},"pb_service")," is useful to get them.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"neb::host_status")," ",(0,r.kt)("br",null)," (1, 14)"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"neb::pb_host_status")," ",(0,r.kt)("br",null)," (1, 32)"),(0,r.kt)("td",{parentName:"tr",align:null},"New events are lighter. Several fields can be missing. In that case, ",(0,r.kt)("strong",{parentName:"td"},"pb_host")," is useful to get them.")))),(0,r.kt)("p",null,"There are also two new events with BBDO 3.0: *neb::pb_adaptive_host",(0,r.kt)("strong",{parentName:"p"}," and\n"),"neb::pb_adaptive_service**. They carry configuration changes for a host or a\nservice. These events are designed to be small."),(0,r.kt)("p",null,"In a ",(0,r.kt)("strong",{parentName:"p"},"neb::pb_adaptive_service")," event, there are two mandatory fields:",(0,r.kt)("strong",{parentName:"p"},"host","_","id"),"\nand ",(0,r.kt)("strong",{parentName:"p"},"service","_","id")," to know the relevant service. All the other fields are\noptional. If defined (in Lua not ",(0,r.kt)("strong",{parentName:"p"},"nil"),"), the value has been set and you have\nto handle it; otherwise, ignore it."))}u.isMDXComponent=!0}}]);