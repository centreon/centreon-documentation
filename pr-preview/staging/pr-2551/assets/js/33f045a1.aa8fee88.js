"use strict";(self.webpackChunkcentreon_docs=self.webpackChunkcentreon_docs||[]).push([[66208],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,m=u["".concat(c,".").concat(d)]||u[d]||g[d]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},83274:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>u});n(67294);var r=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={id:"integrating-pollers",title:"Integrating new pollers in a manual Centreon-HA cluster"},c=void 0,s={unversionedId:"installation/installation-of-centreon-ha-manual/integrating-pollers",id:"version-23.10/installation/installation-of-centreon-ha-manual/integrating-pollers",title:"Integrating new pollers in a manual Centreon-HA cluster",description:"Obtaining central nodes' thumbprints",source:"@site/versioned_docs/version-23.10/installation/installation-of-centreon-ha-manual/integrating-pollers.md",sourceDirName:"installation/installation-of-centreon-ha-manual",slug:"/installation/installation-of-centreon-ha-manual/integrating-pollers",permalink:"/centreon-documentation/pr-preview/staging/pr-2551/docs/installation/installation-of-centreon-ha-manual/integrating-pollers",draft:!1,editUrl:"https://github.com/centreon/centreon-documentation/edit/staging/versioned_docs/version-23.10/installation/installation-of-centreon-ha-manual/integrating-pollers.md",tags:[],version:"23.10",lastUpdatedAt:1699282580,formattedLastUpdatedAt:"Nov 6, 2023",frontMatter:{id:"integrating-pollers",title:"Integrating new pollers in a manual Centreon-HA cluster"},sidebar:"version-23.10/docs",previous:{title:"4-node manual failover installation",permalink:"/centreon-documentation/pr-preview/staging/pr-2551/docs/installation/installation-of-centreon-ha-manual/centreon-ha-4-nodes-installation-manual-failover"},next:{title:"Cluster acceptance guide",permalink:"/centreon-documentation/pr-preview/staging/pr-2551/docs/administration/centreon-ha/acceptance-guide"}},p={},u=[{value:"Obtaining central nodes&#39; thumbprints",id:"obtaining-central-nodes-thumbprints",level:2},{value:"Adding the Poller to the configuration",id:"adding-the-poller-to-the-configuration",level:2},{value:"Configuring Gorgone on the poller",id:"configuring-gorgone-on-the-poller",level:2}],g={toc:u},d="wrapper";function m(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)(d,a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},g,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"obtaining-central-nodes-thumbprints"},"Obtaining central nodes' thumbprints"),(0,r.kt)("p",null,"The Gorgone services of both central nodes will need to be authorized by the pollers' Gorgone services. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"First, obtain each central node's key:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget -O /root/gorgone_key_thumbprint.pl  https://raw.githubusercontent.com/centreon/centreon-gorgone/master/contrib/gorgone_key_thumbprint.pl\nperl /root/gorgone_key_thumbprint.pl --key-path /var/lib/centreon-gorgone/.keys/rsakey.priv.pem\n")),(0,r.kt)("p",null,"The command output should look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"2020-09-25 10:47:35 - INFO - File '/var/lib/centreon-gorgone/.keys/rsakey.priv.pem' JWK thumbprint: RsfNibuDdOvzwP75G72rpIKIG2nRhkyGQrQXE4pXa_s\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You must have two keys; one for each central node. Copy the last part of the printed lines (what is displayed after ",(0,r.kt)("inlineCode",{parentName:"li"},"JWK thumbprint:"),") and keep it for later.")),(0,r.kt)("h2",{id:"adding-the-poller-to-the-configuration"},"Adding the Poller to the configuration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Add your poller to the configuration "the standard way" ',(0,r.kt)("a",{parentName:"p",href:"/centreon-documentation/pr-preview/staging/pr-2551/docs/monitoring/monitoring-servers/add-a-poller-to-configuration"},"following these steps with ZeroMQ protocol")," ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You should now have overwritten the ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/centreon-gorgone/config.d/40-gorgoned.yaml")," file, and it should contain lines like these:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"    authorized_clients:\n    - key: tRsFMBv9X3ScNFMwvG8D652nXMsgEYMb1qsJek-Mns8\n")),(0,r.kt)("h2",{id:"configuring-gorgone-on-the-poller"},"Configuring Gorgone on the poller"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You must now modify ",(0,r.kt)("inlineCode",{parentName:"li"},"/etc/centreon-gorgone/config.d/40-gorgoned.yaml")," on the poller in order to have both central keys in this section:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"    authorized_clients:\n    - key: key_1_from_earlier\n    - key: key_2_from_earlier\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Now restart Gorgone on the poller:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl restart gorgoned\n")),(0,r.kt)("p",null,"At this point, any of your central nodes should be allowed to connect to your poller's Gorgone service and send configurations, retrieve statistics, restart services, etc."))}m.isMDXComponent=!0}}]);