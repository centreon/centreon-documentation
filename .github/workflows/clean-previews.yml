name: clean-previews

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  clean-previews:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0
          sparse-checkout: |
            pr-preview

      - run: |
          set -x
          ls
          cd pr-preview

          #git ls-tree --name-only HEAD -z staging/ next/ | TZ=UTC xargs -0n1 -I_ git --no-pager log -1 --date=iso-local --format="%ad _" -- _ | sort | cut -d' ' -f1

          git ls-tree --name-only HEAD -z staging/ next/ | TZ=UTC xargs -0 -I_ git --no-pager log -1 --date=iso-local --format="%ad _" -- _ | sort | head -n 1 | awk '{print $NF}'

          #git ls-tree --name-only HEAD | while read filename; do
          #  echo "$(git log -1 --format="%at | %h | %an | %ad |" -- $filename) $filename"
          #done

          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          while [ "$(du -sm . | cut -f1)" -gt 2000 ]; do
            du -sh .
            BIGGEST_PREVIEW=$(git ls-tree --name-only HEAD -z staging/ next/ | TZ=UTC xargs -0 -I_ git --no-pager log -1 --date=iso-local --format="%ad _" -- _ | sort | head -n 1 | awk '{print $NF}')
            echo $BIGGEST_PREVIEW
            du -sh $BIGGEST_PREVIEW
            ls -lh $BIGGEST_PREVIEW
            git rm -r $BIGGEST_PREVIEW
          done

          git commit -m "Remove oldest previews"
          git push

          du -sh
